{"version":3,"sources":["./src/$_lazy_route_resource lazy","./src/app/add-product/add-product.component.css","./src/app/add-product/add-product.component.html","./src/app/add-product/add-product.component.ts","./src/app/add-user/add-user.component.css","./src/app/add-user/add-user.component.html","./src/app/add-user/add-user.component.ts","./src/app/app-routing.module.ts","./src/app/app.component.css","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/brand-management/brand-management.component.css","./src/app/brand-management/brand-management.component.html","./src/app/brand-management/brand-management.component.ts","./src/app/dashboard/dashboard.component.css","./src/app/dashboard/dashboard.component.html","./src/app/dashboard/dashboard.component.ts","./src/app/data.service.ts","./src/app/edit-user/edit-user.component.css","./src/app/edit-user/edit-user.component.html","./src/app/edit-user/edit-user.component.ts","./src/app/login/login.component.css","./src/app/login/login.component.html","./src/app/login/login.component.ts","./src/app/product-management/product-management.component.css","./src/app/product-management/product-management.component.html","./src/app/product-management/product-management.component.ts","./src/app/side-menu/side-menu.component.css","./src/app/side-menu/side-menu.component.html","./src/app/side-menu/side-menu.component.ts","./src/app/style-management/style-management.component.css","./src/app/style-management/style-management.component.html","./src/app/style-management/style-management.component.ts","./src/app/user-management/user-management.component.css","./src/app/user-management/user-management.component.html","./src/app/user-management/user-management.component.ts","./src/app/view-user/view-user.component.css","./src/app/view-user/view-user.component.html","./src/app/view-user/view-user.component.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_lazy_route_resource lazy\n// module id = ./src/$$_lazy_route_resource lazy recursive\n// module chunks = main","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/add-product/add-product.component.css\n// module id = ./src/app/add-product/add-product.component.css\n// module chunks = main","module.exports = \"<div class=\\\"mainbox\\\">\\n  <app-side-menu></app-side-menu>\\n<div class=\\\"right-section\\\">\\n  <div class=\\\"copyrights\\\">Copyright © 2018 App name All Rights Reserved.</div>\\n  <div class=\\\"right-inner\\\">\\n            <div class=\\\"filter-block\\\">\\n              <fieldset class=\\\"global-fieldset\\\">\\n                 <legend>Add Style Tip</legend>\\n                  <div class=\\\"filter-content\\\">\\n                      <form class=\\\"login_box_outer\\\" [formGroup]='addProductForm' novalidate>\\n                       <div class=\\\"common-detail-box\\\">\\n                          <div class=\\\"form-group row\\\" [ngClass]=\\\"{'has-error': (addProductForm.controls['productName'].dirty && addProductForm.controls['productName'].invalid)}\\\">\\n                             <label class=\\\"col-sm-4 label-right label-top\\\">Product Name</label>\\n                             <div class=\\\"col-sm-8\\\">\\n                                <input class=\\\"form-control custom-control custom-input\\\" id=\\\"productName\\\" placeholder=\\\"Product Name\\\" type=\\\"text\\\" [formControl]=\\\"addProductForm.controls['productName']\\\" maxlength=\\\"20\\\" />\\n                                <div class=\\\"errMsg\\\" *ngIf=\\\"addProductForm.controls['productName'].dirty && addProductForm.controls['productName'].invalid\\\">\\n                                    <span style='color:red' [ngClass]=\\\"{error:addProductForm.controls['productName'].hasError('required')}\\\" *ngIf=\\\"addProductForm.controls['productName'].hasError('required')\\\">*Please enter product name.</span>\\n                                    <span style='color:red' [ngClass]=\\\"{error:addProductForm.controls['productName'].hasError('minlength') && !addProductForm.controls['productName'].hasError('pattern')}\\\" *ngIf=\\\"addProductForm.controls['productName'].hasError('minlength') && !addProductForm.controls['productName'].hasError('pattern')\\\">*Product name must be minimum 2 characters.</span>\\n                                    <span style='color:red' [ngClass]=\\\"{error:!addProductForm.controls['productName'].hasError('minlength') && addProductForm.controls['productName'].hasError('pattern')}\\\" *ngIf=\\\"!addProductForm.controls['productName'].hasError('minlength') && addProductForm.controls['productName'].hasError('pattern')\\\">*Please enter valid product name.</span>\\n                                  </div>\\n                             </div>\\n                          </div>\\n                          <div class=\\\"form-group row\\\">\\n                             <label class=\\\"col-sm-4 label-right label-top\\\">Amount</label>\\n                             <div class=\\\"col-sm-8\\\">\\n                                <input type=\\\"email\\\" class=\\\"form-control custom-control custom-input\\\">\\n                             </div>\\n                          </div>\\n                          <div class=\\\"form-group row\\\">\\n                             <label class=\\\"col-sm-4 label-right label-top\\\">Description</label>\\n                             <div class=\\\"col-sm-8\\\">\\n                                <textarea class=\\\"form-control custom-control textarea-custom\\\"></textarea>\\n                             </div>\\n                          </div>\\n                          <div class=\\\"form-group row\\\">\\n                             <label class=\\\"col-sm-4 label-right label-top\\\">Website url</label>\\n                             <div class=\\\"col-sm-8\\\">\\n                                <input type=\\\"text\\\" class=\\\"form-control custom-control custom-input\\\">\\n                             </div>\\n                          </div>\\n                          <div class=\\\"form-group row\\\">\\n                             <label class=\\\"col-sm-4 label-right label-top\\\">Choose color</label>\\n                              <div class=\\\"col-sm-8\\\">\\n                                <div class=\\\"color-choose\\\">\\n                                  <input type=\\\"text\\\" class=\\\"form-control custom-control custom-input\\\"  placeholder=\\\"#455536\\\">\\n                                  <div class=\\\"color\\\">\\n                                  </div>\\n                                </div>\\n                             </div>\\n                          </div>\\n                       </div>\\n</form>\\n                  </div>\\n              </fieldset>\\n            </div> \\n            <div class=\\\"filter-block\\\">\\n              <fieldset class=\\\"global-fieldset\\\">\\n                 <legend>Set Size</legend>\\n                  <div class=\\\"filter-content\\\">\\n                       <div class=\\\"common-detail-box\\\">\\n                          <div class=\\\"form-group row\\\">\\n                             <label class=\\\"col-sm-4 label-right label-top\\\">Size</label>\\n                             <div class=\\\"col-sm-8\\\">\\n                                <input type=\\\"text\\\" class=\\\"form-control custom-control custom-input\\\">\\n                             </div>\\n                          </div>\\n                          <div class=\\\"form-group row\\\">\\n                             <label class=\\\"col-sm-4 label-right label-top\\\">Quantity</label>\\n                             <div class=\\\"col-sm-8\\\">\\n                                <select class=\\\"form-control angle\\\">\\n                                  <option>Select</option>\\n                                </select>\\n                             </div>\\n                          </div>\\n                       </div>\\n                  </div>\\n              </fieldset>\\n            </div>\\n            <div class=\\\"filter-block\\\">\\n              <fieldset class=\\\"global-fieldset\\\">\\n                 <legend>Set Type/Style</legend>\\n                  <div class=\\\"filter-content\\\">\\n                       <div class=\\\"common-detail-box\\\">\\n                          <div class=\\\"form-group row\\\">\\n                             <label class=\\\"col-sm-4 label-right label-top\\\">Gender</label>\\n                              <div class=\\\"col-sm-8\\\">\\n                                <select class=\\\"form-control angle\\\">\\n                                  <option>Select</option>\\n                                </select>\\n                             </div>\\n                          </div>\\n                          <div class=\\\"form-group row\\\">\\n                             <label class=\\\"col-sm-4 label-right label-top\\\">Body Type</label>\\n                             <div class=\\\"col-sm-8\\\">\\n                                <select class=\\\"form-control angle\\\">\\n                                  <option>Select</option>\\n                                </select>\\n                             </div>\\n                          </div>\\n                       </div>\\n                  </div>\\n              </fieldset>\\n            </div>  \\n            <div class=\\\"table-button text-center mt30\\\">\\n               <button (click)=\\\"saveProduct()\\\" class=\\\"btn btn-red\\\">Save </button>\\n               <button (click)=\\\"cancel()\\\" class=\\\"btn btn-danger\\\">Cancel</button>\\n            </div>       \\n        </div>  \\n      </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/add-product/add-product.component.html\n// module id = ./src/app/add-product/add-product.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\ndeclare var $: any\n\n@Component({\n  selector: 'app-add-product',\n  templateUrl: './add-product.component.html',\n  styleUrls: ['./add-product.component.css']\n})\nexport class AddProductComponent implements OnInit {\n  addProductForm: FormGroup;\n  constructor(private router: Router, private formBuilder: FormBuilder) { }\n\n  ngOnInit() {\n    this.addProductForm = this.formBuilder.group({\n      productName: ['', Validators.compose([Validators.required, Validators.pattern(/^[a-zA-Z ]*$/), Validators.minLength(2)])],\n    });\n    \n  }\n  saveProduct() {\nthis.router.navigate(['/product-management'])\n  }\n  cancel() {\n    this.router.navigate(['/product-management'])\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/add-product/add-product.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/add-user/add-user.component.css\n// module id = ./src/app/add-user/add-user.component.css\n// module chunks = main","module.exports = \"<div class=\\\"mainbox\\\">\\n  <app-side-menu></app-side-menu>\\n<div class=\\\"right-section\\\">\\n  <div class=\\\"copyrights\\\">Copyright © 2018 App name All Rights Reserved.</div>\\n  <div class=\\\"right-inner\\\">\\n            <div class=\\\"filter-block\\\">\\n              <fieldset class=\\\"global-fieldset\\\">\\n                 <legend>Add User</legend>\\n                  <div class=\\\"filter-content\\\">\\n                      <form class=\\\"login_box_outer\\\" [formGroup]='addUserForm' novalidate>\\n                       <div class=\\\"common-detail-box\\\">\\n                          <div class=\\\"form-group row\\\" [ngClass]=\\\"{'has-error': (addUserForm.controls['name'].dirty && addUserForm.controls['name'].invalid)}\\\">\\n                             <label class=\\\"col-sm-4 label-right label-top\\\">Name</label>\\n                             <div class=\\\"col-sm-8\\\">\\n                                <input class=\\\"form-control\\\" id=\\\"name\\\" name=\\\"name\\\" [(ngModel)]=\\\"userDetail.name\\\" placeholder=\\\"Name\\\" type=\\\"text\\\" [formControl]=\\\"addUserForm.controls['name']\\\"  maxlength=\\\"20\\\"/>\\n                                <div class=\\\"errMsg\\\" *ngIf=\\\"addUserForm.controls['name'].dirty && addUserForm.controls['name'].invalid\\\">\\n                                  <span style='color:red' [ngClass]=\\\"{error:addUserForm.controls['name'].hasError('required')}\\\" *ngIf=\\\"addUserForm.controls['name'].hasError('required')\\\">*Please enter name.</span>\\n                                  <span style='color:red' [ngClass]=\\\"{error:addUserForm.controls['name'].hasError('minlength') && !addUserForm.controls['name'].hasError('pattern')}\\\" *ngIf=\\\"addUserForm.controls['name'].hasError('minlength') && !addUserForm.controls['name'].hasError('pattern')\\\">*Name must be minimum 2 characters.</span>\\n                                  <span style='color:red' [ngClass]=\\\"{error:addUserForm.controls['name'].hasError('pattern')}\\\" *ngIf=\\\"addUserForm.controls['name'].hasError('pattern')\\\">*Please enter valid name.</span>\\n                                </div>\\n                              </div>\\n                          </div>\\n                          <div class=\\\"form-group row\\\" [ngClass]=\\\"{'has-error': (addUserForm.controls['email'].dirty && addUserForm.controls['email'].invalid)}\\\">\\n                             <label class=\\\"col-sm-4 label-right label-top\\\">Email</label>\\n                             <div class=\\\"col-sm-8\\\">\\n                                <input type=\\\"text\\\" name=\\\"email\\\" [(ngModel)]=\\\"userDetail.email\\\" id=\\\"email\\\" [formControl]=\\\"addUserForm.controls['email']\\\" class=\\\"form-control\\\" placeholder=\\\"Email\\\" maxlength=\\\"60\\\">\\n                                <div class=\\\"errMsg\\\" *ngIf=\\\"addUserForm.controls['email'].dirty && addUserForm.controls['email'].invalid\\\">\\n                                  <span style='color:red' [ngClass]=\\\"{error:addUserForm.controls['email'].hasError('required')}\\\" *ngIf=\\\"addUserForm.controls['email'].hasError('required')\\\">*Please enter an email.</span>\\n                                  <span style='color:red' [ngClass]=\\\"{error: addUserForm.controls['email'].hasError('pattern')}\\\"  *ngIf=\\\"addUserForm.controls['email'].hasError('pattern')\\\">*Please enter valid email.</span>\\n                                  <span style='color:red' [ngClass]=\\\"{error: addUserForm.controls['email'].hasError('maxlength') && addUserForm.controls['email'].dirty}\\\" *ngIf=\\\"addUserForm.controls['email'].hasError('maxlength') && ! addUserForm.controls['email'].hasError('pattern')\\\">*Please enter valid email.</span>\\n                              </div>\\n                              </div>\\n                          </div>\\n                          <div class=\\\"form-group row\\\" [ngClass]=\\\"{'has-error': (addUserForm.controls['age'].dirty && addUserForm.controls['age'].invalid)}\\\">\\n                             <label class=\\\"col-sm-4 label-right label-top\\\">Age</label>\\n                             <div class=\\\"col-sm-8\\\">\\n                             <input class=\\\"form-control\\\" name=\\\"age\\\" id='age' [(ngModel)]=\\\"userDetail.age\\\" placeholder=\\\"Age\\\" type=\\\"text\\\" [formControl]=\\\"addUserForm.controls['age']\\\" minlength=\\\"1\\\" maxlength=\\\"3\\\"/>\\n              <div class=\\\"errMsg\\\" *ngIf=\\\"addUserForm.controls['age'].dirty && addUserForm.controls['age'].invalid\\\">\\n                <span style='color:red' [ngClass]=\\\"{error:addUserForm.controls['age'].hasError('required')}\\\"  *ngIf=\\\"addUserForm.controls['age'].hasError('required')\\\">*Please enter age.</span>\\n                <span style='color:red' [ngClass]=\\\"{error:addUserForm.controls['age'].hasError('pattern')}\\\"  *ngIf=\\\"addUserForm.controls['age'].hasError('pattern')\\\">*Please enter valid age.</span>\\n              </div>\\n                             </div>\\n                          </div>\\n                          \\n                          <!-- <div class=\\\"form-group row\\\">\\n                              <label class=\\\"col-sm-4 label-right label-top\\\">Gender</label>\\n                              <div class=\\\"col-sm-8\\\">\\n                               <select  class=\\\"form-control\\\" [(ngModel)]=\\\"userDetail.gender\\\" [ngModelOptions]=\\\"{standalone: true}\\\">  \\n                                 <option value=\\\"\\\">--Select--</option> \\n                                  <option *ngFor=\\\"let gen of gender\\\" value={{gen.name}} >{{gen.name}}</option>\\n                              </select>  \\n                              </div>\\n                           </div> -->\\n                           <div class=\\\"form-group row\\\">\\n                            <label class=\\\"col-sm-4 label-right label-top\\\">Gender</label>\\n                            <div class=\\\"col-sm-8\\\">\\n                             <select (ngModelChange)=\\\"onSelect($event)\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"userDetail.gender\\\" [ngModelOptions]=\\\"{standalone: true}\\\" required>  \\n                               <option value=\\\"\\\" disabled>--Select--</option> \\n                                <option *ngFor=\\\"let gen of gender\\\" value={{gen.name}} >{{gen.name}}</option>\\n                            </select>  \\n                            </div>\\n                         </div>\\n                          <div class=\\\"form-group row\\\">\\n                            <label class=\\\"col-sm-4 label-right label-top\\\">Body Type</label>\\n                            <div class=\\\"col-sm-8\\\">\\n                            <select class=\\\"form-control\\\" name=\\\"bodyType\\\" [disabled]=\\\"!userDetail.gender\\\"  [(ngModel)]=\\\"userDetail.bodyType\\\" [ngModelOptions]=\\\"{standalone: true}\\\" required>\\n                                 <option value='' disabled>--Select--</option>  \\n                                 <option *ngFor=\\\"let body of selectedBody\\\" value={{body.name}}>{{body.name}}</option>\\n                            </select>\\n                           </div>\\n                         </div>\\n\\n                          <div class=\\\"form-group row\\\" [ngClass]=\\\"{'has-error': (addUserForm.controls['height'].dirty && addUserForm.controls['height'].invalid)}\\\">\\n                              <label class=\\\"col-sm-4 label-right label-top\\\">height</label>\\n                              <div class=\\\"col-sm-8\\\">\\n                                 <input class=\\\"form-control\\\" id=\\\"height\\\" name=\\\"height\\\" [(ngModel)]=\\\"userDetail.height\\\" placeholder=\\\"height\\\" type=\\\"text\\\" [formControl]=\\\"addUserForm.controls['height']\\\" maxlength=\\\"3\\\"/>\\n                                 <div class=\\\"errMsg\\\" *ngIf=\\\"addUserForm.controls['height'].dirty && addUserForm.controls['height'].invalid\\\">\\n                                   <span style='color:red' [ngClass]=\\\"{error:addUserForm.controls['height'].hasError('required')}\\\" *ngIf=\\\"addUserForm.controls['height'].hasError('required')\\\">*Please enter height.</span>\\n                                   <span style='color:red' [ngClass]=\\\"{error:addUserForm.controls['height'].hasError('pattern')}\\\" *ngIf=\\\"addUserForm.controls['height'].hasError('pattern')\\\">*Please enter valid height.</span>\\n                                 </div>\\n                               </div>\\n                           </div>\\n                           <div class=\\\"form-group row\\\" [ngClass]=\\\"{'has-error': (addUserForm.controls['weight'].dirty && addUserForm.controls['weight'].invalid)}\\\">\\n                              <label class=\\\"col-sm-4 label-right label-top\\\">weight</label>\\n                              <div class=\\\"col-sm-8\\\">\\n                                 <input class=\\\"form-control\\\" id=\\\"weight\\\" name=\\\"weight\\\" [(ngModel)]=\\\"userDetail.weight\\\" placeholder=\\\"weight\\\" type=\\\"text\\\" [formControl]=\\\"addUserForm.controls['weight']\\\" maxlength=\\\"3\\\"/>\\n                                 <div class=\\\"errMsg\\\" *ngIf=\\\"addUserForm.controls['weight'].dirty && addUserForm.controls['weight'].invalid\\\">\\n                                   <span style='color:red' [ngClass]=\\\"{error:addUserForm.controls['weight'].hasError('required')}\\\" *ngIf=\\\"addUserForm.controls['weight'].hasError('required')\\\">*Please enter weight.</span>\\n                                   <span style='color:red' [ngClass]=\\\"{error:addUserForm.controls['weight'].hasError('pattern')}\\\" *ngIf=\\\"addUserForm.controls['weight'].hasError('pattern')\\\">*Please enter valid weight.</span>\\n                                 </div>\\n                               </div>\\n                           </div>\\n                          <div class=\\\"table-button text-center mt30\\\">\\n                             <button class=\\\"btn btn-red\\\" [disabled]=\\\"addUserForm.invalid\\\" (click)=\\\"save()\\\">Save </button>\\n                             <button (click)=\\\"cancel()\\\" class=\\\"btn btn-danger\\\">Cancel</button>\\n                          </div>\\n                       </div>\\n                     </form>\\n                  </div>\\n              </fieldset>\\n            </div>        \\n        </div>  \\n      </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/add-user/add-user.component.html\n// module id = ./src/app/add-user/add-user.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\nimport { DataService } from '../data.service';\n\ndeclare var $: any\n\n@Component({\n  selector: 'app-add-user',\n  templateUrl: './add-user.component.html',\n  styleUrls: ['./add-user.component.css']\n})\nexport class AddUserComponent implements OnInit {\n  addUserForm: FormGroup;\n  userDetail:any={\"bodyType\": \"\", \"gender\": \"\"}\n  selectedProduct:any\n  selectedBody:any\n  \n  gender = [\n\n\n    {id:1, name:\"Male\"},\n    {id:2, name:\"Female\"}    \n  \n  ]\n\n  maleBodyType = [\n\n    {id:1, name:\"Slim Jim\"},\n    {id:2, name:\"Muscle Man\"},\n    {id:3, name:\"Big Guy\"},\n    {id:4, name:\"Bulky\"}\n  ]\n\n  femaleBodyType = [\n    {id:1, name:\"Rectangle\"},\n    {id:2, name:\"Peer\"},\n    {id:3, name:\"Triangle\"},\n    {id:4, name:\"Hourglass\"}\n  ]\n  \n\n  onSelect(productId) {\n    this.userDetail.bodyType=\"\"\n    let maleBodyType = [\n\n      {id:1, name:\"Slim Jim\"},\n      {id:2, name:\"Muscle Man\"},\n      {id:3, name:\"Big Guy\"},\n      {id:4, name:\"Bulky\"}\n    ]\n    \n    let femaleBodyType = [\n      {id:1, name:\"Rectangle\"},\n      {id:2, name:\"Peer\"},\n      {id:3, name:\"Triangle\"},\n      {id:4, name:\"Hourglass\"}\n    ]\n    this.selectedProduct = null;\n    for (var i = 0; i < this.gender.length; i++)\n    {\n      if (this.gender[i].name == productId) {\n        this.selectedProduct = this.gender[i];\n       \n      }\n    }\n    if(this.selectedProduct.name == \"Male\") {\n      this.selectedBody = this.maleBodyType\n    }\n    else {\n      this.selectedBody = this.femaleBodyType\n    \n    }\n \n}\nconstructor(private router: Router, private formBuilder: FormBuilder, public service : DataService) { }\n  ngOnInit() {\n      this.addUserForm = this.formBuilder.group({\n      name: ['', Validators.compose([Validators.required, Validators.pattern(/^[^\\s][a-zA-Z ]*$/), Validators.minLength(2)])],\n      email:['', Validators.compose([Validators.required, Validators.pattern(/^[A-Z0-9_]+([\\.][A-Z0-9_]+)*@[A-Z0-9-]+(\\.[a-zA-Z]{2,3})+$/i), Validators.maxLength(50)])],\n      age: ['', Validators.compose([Validators.required, Validators.pattern(/^[1-9][0-9]{1,7}$/)])],\n      height: ['', Validators.compose([Validators.required, Validators.pattern(/^[1-9][0-9]{1,7}$/)])],\n      weight: ['', Validators.compose([Validators.required, Validators.pattern(/^[1-9][0-9]{1,7}$/)])],\n      \n\n    });\n   \n  }\n\n  cancel() {\n    this.router.navigate(['/user-management'])\n  }\n  save() {\n    let credential = {\n      \"name\":this.userDetail.name,\n      \"email\":this.userDetail.email,\n      \"age\":this.userDetail.age,\n      \"bodyType\":this.userDetail.bodyType,\n      \"height\":this.userDetail.height,\t\n      \"weight\":this.userDetail.weight,\n      \"gender\":this.userDetail.gender\n      \n      }\n          this.service.postApi('/addNewUser', credential).subscribe(response => {\n           \n            if (response['responseCode'] == 200) {\n              this.service.success(response['responseMessage'])\n                    console.log('success', response['responseMessage'])           \n                    this.router.navigate(['/user-management'])\n            } else {\n              this.service.error('Fill the necessary fields.')\n              console.log('Failure', response['responseMessage']) \n            }\n          }, error => {\n            console.log('something went wrong') \n            \n          })\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/add-user/add-user.component.ts","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { SideMenuComponent } from './side-menu/side-menu.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { UserManagementComponent } from './user-management/user-management.component';\nimport { AddUserComponent } from './add-user/add-user.component';\nimport { BrandManagementComponent } from './brand-management/brand-management.component';\nimport { ProductManagementComponent } from './product-management/product-management.component';\nimport { AddProductComponent } from './add-product/add-product.component';\nimport { StyleManagementComponent } from './style-management/style-management.component';\nimport { ViewUserComponent } from './view-user/view-user.component';\nimport { EditUserComponent } from './edit-user/edit-user.component';\n\n\nconst routes: Routes = [\n  {path: '', redirectTo: 'login', pathMatch: 'full' },\n  {path: 'login', component: LoginComponent},\n  {path: 'side-menu', component: SideMenuComponent},\n  {path: 'dashboard', component: DashboardComponent},\n  {path: 'user-management', component: UserManagementComponent},\n  // {path: 'add-user', component: AddUserComponent},\n  {path: 'brand-management', component: BrandManagementComponent},\n  {path: 'product-management', component: ProductManagementComponent},\n  {path: 'add-product', component: AddProductComponent},\n  {path: 'style-management', component: StyleManagementComponent},\n  {path: 'view-user', component: ViewUserComponent},\n  // {path: 'edit-user', component: EditUserComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app-routing.module.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = ./src/app/app.component.css\n// module chunks = main","module.exports = \"  <router-outlet> </router-outlet>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = ./src/app/app.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms'\nimport { DataService } from './data.service';\nimport {DndModule} from 'ng2-dnd';\n\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { SideMenuComponent } from './side-menu/side-menu.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { UserManagementComponent } from './user-management/user-management.component';\nimport { AddUserComponent } from './add-user/add-user.component';\nimport { BrandManagementComponent } from './brand-management/brand-management.component';\nimport { ProductManagementComponent } from './product-management/product-management.component';\nimport { AddProductComponent } from './add-product/add-product.component';\nimport { StyleManagementComponent } from './style-management/style-management.component';\nimport { ViewUserComponent } from './view-user/view-user.component';\nimport { EditUserComponent } from './edit-user/edit-user.component';\nimport {NgxPaginationModule} from 'ngx-pagination';\nimport { ToastrModule } from 'ngx-toastr';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    SideMenuComponent,\n    DashboardComponent,\n    UserManagementComponent,\n    AddUserComponent,\n    BrandManagementComponent,\n    ProductManagementComponent,\n    AddProductComponent,\n    StyleManagementComponent,\n    ViewUserComponent,\n    EditUserComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule, \n    ToastrModule.forRoot({\n      timeOut: 10000,\n      positionClass: 'toast-bottom-right',\n      preventDuplicates: true,\n    }),\n    HttpClientModule,\n    NgxPaginationModule,\n    AppRoutingModule,\n    DndModule.forRoot(),\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  providers: [DataService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/brand-management/brand-management.component.css\n// module id = ./src/app/brand-management/brand-management.component.css\n// module chunks = main","module.exports = \"<div class=\\\"mainbox\\\">\\n  <app-side-menu></app-side-menu>\\n<div class=\\\"right-section\\\">\\n  <div class=\\\"copyrights\\\">Copyright © 2018 App name All Rights Reserved.</div>\\n  <div class=\\\"right-inner\\\">\\n      \\n    <h1 class=\\\"heading\\\">BRAND MANAGEMENT</h1>\\n    <div class=\\\"filter-block\\\">\\n        <fieldset class=\\\"global-fieldset\\\">\\n           <legend>Brands</legend>\\n           <div class=\\\"filter-content\\\">\\n              <div class=\\\"row\\\">\\n                 <div class=\\\"col-sm-6\\\">\\n                    <div class=\\\"form-group\\\">\\n                      <div class=\\\"search-icon\\\">\\n                         <input type=\\\"text\\\" [(ngModel)]=\\\"searchBrand.data\\\"  (keyup)=\\\"search()\\\" class=\\\"form-control max-wt-300 search-input\\\" placeholder=\\\"Search\\\">\\n                         <i class=\\\"fa fa-search\\\" aria-hidden=\\\"true\\\"></i>\\n                      </div>\\n                   </div>\\n                 </div>\\n                 <div class=\\\"col-sm-6\\\">\\n                   <div class=\\\"btn-right\\\">\\n                      <a class=\\\"btn btn-red btn-common\\\"  href=\\\"#add_brand\\\" data-toggle=\\\"modal\\\">Add</a>\\n                   </div>\\n                 </div>\\n              </div>\\n           </div>\\n           <div class=\\\"filter-content pt0\\\" *ngIf=\\\"menBrandList.length\\\">\\n              <fieldset class=\\\"global-fieldset\\\">\\n                 <legend>Men</legend>\\n                 <div class=\\\"brand-block\\\">\\n                    <ul>\\n                       <li *ngFor=\\\"let brands of menBrandList\\\">{{brands}}</li>\\n                    </ul>\\n                 </div>\\n                 <button  *ngIf=\\\"menBrandList.length < menTotal\\\" (click)=\\\"seeMoreMan()\\\">See more</button>\\n              </fieldset>\\n           </div>\\n           <div class=\\\"filter-content pt0\\\" *ngIf=\\\"!menBrandList.length\\\">\\n                <fieldset class=\\\"global-fieldset\\\">\\n                   <legend>Men</legend>\\n                   <div class=\\\"brand-block\\\">\\n                      <ul style=\\\"text-align:center\\\" >\\n                         <li>No Brand Found!!</li>\\n                     </ul>\\n                  </div>\\n                </fieldset>\\n             </div>\\n           <div class=\\\"filter-content pt0\\\" *ngIf=\\\"womenBrandList.length\\\">\\n              <fieldset class=\\\"global-fieldset\\\">\\n                 <legend>Women</legend>\\n                 <div class=\\\"brand-block\\\">\\n                    <ul>\\n                       <li *ngFor=\\\"let brands of womenBrandList\\\">{{brands}}</li>\\n                    </ul>\\n                 </div>\\n                 <button  *ngIf=\\\"womenBrandList.length < womenTotal\\\" (click)=\\\"seeMoreWoman()\\\">See more</button>\\n              </fieldset>\\n           </div>\\n           <div class=\\\"filter-content pt0\\\" *ngIf=\\\"!womenBrandList.length\\\">\\n                <fieldset class=\\\"global-fieldset\\\">\\n                   <legend>Women</legend>\\n                   <div class=\\\"brand-block\\\">\\n                      <ul style=\\\"text-align:center\\\" >\\n                         <li>No Brand Found!!</li>\\n                     </ul>\\n                  </div>\\n                </fieldset>\\n             </div>\\n           <div class=\\\"filter-content pt0\\\" *ngIf=\\\"bothBrandList.length\\\">\\n              <fieldset class=\\\"global-fieldset\\\">\\n                 <legend>Both</legend>\\n                 <div class=\\\"brand-block\\\">\\n                    <ul>\\n                       <li *ngFor=\\\"let brands of bothBrandList\\\">{{brands}}</li>\\n                   </ul>\\n                </div>\\n                <button  *ngIf=\\\"bothBrandList.length < bothTotal\\\" (click)=\\\"seeMoreBoth()\\\">See more</button>\\n              </fieldset>\\n           </div>\\n           <div class=\\\"filter-content pt0\\\" *ngIf=\\\"!bothBrandList.length\\\">\\n                <fieldset class=\\\"global-fieldset\\\">\\n                   <legend>Both</legend>\\n                   <div class=\\\"brand-block\\\">\\n                      <ul style=\\\"text-align:center\\\" >\\n                         <li>No Brand Found!!</li>\\n                     </ul>\\n                  </div>\\n                </fieldset>\\n             </div>\\n        </fieldset>\\n     </div>\\n          \\n     </div>\\n</div>\\n</div>\\n\\n<div id=\\\"add_brand\\\" class=\\\"modal fade\\\" data-easein=\\\"bounceIn\\\"  tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"costumModalLabel\\\" aria-hidden=\\\"true\\\">\\n  <div class=\\\"modal-dialog max-wt-800\\\">\\n      <div class=\\\"modal-content\\\">\\n          <div class=\\\"modal-header border0\\\">\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\">\\n                  ×\\n              </button>\\n          </div>\\n          <div class=\\\"modal-body pt0\\\">\\n              <fieldset class=\\\"global-fieldset\\\">\\n                 <legend>Add Brands</legend>\\n                 <div class=\\\"max-wt-400 mrgn-0-auto mt20 mb30\\\">\\n                        <form class=\\\"login_box_outer\\\" [formGroup]='addBrandForm' novalidate>\\n                    <div class=\\\"form-group mb30\\\" [ngClass]=\\\"{'has-error': (addBrandForm.controls['brandName'].dirty && addBrandForm.controls['brandName'].invalid)}\\\">\\n                       <label>Brand Name:</label>\\n                       <input class=\\\"form-control\\\" name=\\\"name\\\" [(ngModel)]=\\\"brandDetail.name\\\" placeholder=\\\"Enter the name of the Brand\\\" type=\\\"text\\\" [formControl]=\\\"addBrandForm.controls['brandName']\\\" maxlength=\\\"20\\\" />\\n                       <div class=\\\"errMsg\\\" *ngIf=\\\"addBrandForm.controls['brandName'].dirty && addBrandForm.controls['brandName'].invalid\\\">\\n                            <span style='color:red' [ngClass]=\\\"{error:addBrandForm.controls['brandName'].hasError('required')}\\\" *ngIf=\\\"addBrandForm.controls['brandName'].hasError('required')\\\">*Please enter brand name.</span>\\n                            <span style='color:red' [ngClass]=\\\"{error:addBrandForm.controls['brandName'].hasError('minlength') && !addBrandForm.controls['brandName'].hasError('pattern')}\\\" *ngIf=\\\"addBrandForm.controls['brandName'].hasError('minlength') && !addBrandForm.controls['brandName'].hasError('pattern')\\\">*Brand name must be minimum 2 characters.</span>\\n                            <span style='color:red' [ngClass]=\\\"{error:!addBrandForm.controls['brandName'].hasError('minlength') && addBrandForm.controls['brandName'].hasError('pattern')}\\\" *ngIf=\\\"!addBrandForm.controls['brandName'].hasError('minlength') && addBrandForm.controls['brandName'].hasError('pattern')\\\">*Please enter valid brand name.</span>\\n                          </div>\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                       <label>Select Gender:</label>\\n                       <select class=\\\"form-control angle\\\" [(ngModel)]=\\\"brandDetail.gender\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n                        <option value=\\\"\\\" disabled>--Select--</option>  \\n                        <option value=\\\"male\\\">Male</option>\\n                        <option value=\\\"female\\\">Female</option>\\n                        <option value=\\\"both\\\">Both</option>\\n                       </select>\\n                    </div>\\n                    <div class=\\\"button-box mt40\\\">\\n                       <button class=\\\"btn btn-red mr10 btn-common\\\" [disabled]=\\\"addBrandForm.invalid\\\" data-dismiss=\\\"modal\\\" (click)=\\\"addBrand()\\\">Add</button>\\n                    </div>\\n                    </form>\\n                 </div>\\n              </fieldset>\\n          </div>\\n      </div>\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/brand-management/brand-management.component.html\n// module id = ./src/app/brand-management/brand-management.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { DataService } from '../data.service';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-brand-management',\n  templateUrl: './brand-management.component.html',\n  styleUrls: ['./brand-management.component.css']\n})\nexport class BrandManagementComponent implements OnInit {\n  addBrandForm: FormGroup;\n  menBrandList=[]\n  womenBrandList=[]\n  bothBrandList=[]\n  searchBrand={data:\"\"};\n  brandDetail:any={\"gender\": \"\"}\n  menPage:number=1\n  womenPage:number=1\n  bothPage:number=1\n  menTotal:any\n  womenTotal:any\n  bothTotal:any\n  constructor(private formBuilder: FormBuilder, public service: DataService, private router: Router) { }\n\n  ngOnInit() {\n    \n    this.addBrandForm = this.formBuilder.group({\n      brandName: ['', Validators.compose([Validators.required, Validators.pattern(/^[a-zA-Z ]*$/), Validators.minLength(2)])]\n      });\n      this.displayBrand()\n     \n  }\n \n  search() {\n    this.displayBrand()\n  }\n  displayBrand() {\n\n    let credential = {\n     \"search\":this.searchBrand.data,\n     \"menPage\":this.menPage,\n     \"womenPage\":this.womenPage,\n     \"bothPage\":this.bothPage\n   }\n    \n    for (let val in credential) \n      {\n          if (credential[val] == '') \n          {\n              delete credential[val]\n          }\n      }\n    this.service.postApi('/brandNameList', credential).subscribe(response => {\n      \n      if (response['responseCode'] == 200) {\n              console.log('success', response['data'].menList)  \n\n\n              this.menBrandList = response['data'].menList.men\n            \n              this.womenBrandList = response['data'].womenList.women\n              this.bothBrandList = response['data'].bothList.both\n              this.menTotal=response['data'].menList.menTotal\n              this.womenTotal=response['data'].womenList.womenTotal\n              this.bothTotal=response['data'].bothList.bothTotal\n              \n              \n      } \n      else if(response['responseCode'] == 402) {\n        this.service.error(response['responseMessage'])\n        this.router.navigate(['/login'])\n}\nelse if(response['responseCode'] == 403) {  \n this.service.error(response['responseMessage'])\n this.router.navigate(['/login'])\n}\n      else {\n        console.log('Failure', response['responseMessage']) \n      }\n    }, error => {\n      console.log('something went wrong') \n     })\n  }\n  seeMoreMan() {\nthis.menPage = this.menPage + 1\nlet credential = {\n  \"search\":this.searchBrand.data,\n  \"menPage\":this.menPage,\n  \"womenPage\":this.womenPage,\n  \"bothPage\":this.bothPage\n}\n \n for (let val in credential) \n   {\n       if (credential[val] == '') \n       {\n           delete credential[val]\n       }\n   }\n this.service.postApi('/brandNameList', credential).subscribe(response => {\n   if (response['responseCode'] == 200) {\n           console.log('success', response['data'].menList)  \n           \n         \n           for(let i=0;i<response['data'].menList.men.length;i++){\n             this.menBrandList.push(response['data'].menList.men[i])\n           \n           }\n           \n          this.menTotal=response['data'].menList.menTotal\n            \n   } else {\n     console.log('Failure', response['responseMessage']) \n   }\n }, error => {\n   console.log('something went wrong') \n  })\n  }\n  seeMoreWoman() {\n    this.womenPage = this.womenPage + 1\n    let credential = {\n      \"search\":this.searchBrand.data,\n      \"menPage\":this.menPage,\n      \"womenPage\":this.womenPage,\n      \"bothPage\":this.bothPage\n    }\n     \n     for (let val in credential) \n       {\n           if (credential[val] == '') \n           {\n               delete credential[val]\n           }\n       }\n     this.service.postApi('/brandNameList', credential).subscribe(response => {\n       if (response['responseCode'] == 200) {\n               console.log('success', response['data'].womenList)  \n               \n             \n               for(let i=0;i<response['data'].womenList.women.length;i++){\n                 this.womenBrandList.push(response['data'].womenList.women[i])\n               \n               }\n               \n              this.womenTotal=response['data'].womenList.womenTotal\n                \n       } else {\n         console.log('Failure', response['responseMessage']) \n       }\n     }, error => {\n       console.log('something went wrong') \n      })\n      }\n      seeMoreBoth() {\n        this.bothPage = this.bothPage + 1\n        let credential = {\n          \"search\":this.searchBrand.data,\n          \"menPage\":this.menPage,\n          \"womenPage\":this.womenPage,\n          \"bothPage\":this.bothPage\n        }\n         \n         for (let val in credential) \n           {\n               if (credential[val] == '') \n               {\n                   delete credential[val]\n               }\n           }\n         this.service.postApi('/brandNameList', credential).subscribe(response => {\n           if (response['responseCode'] == 200) {\n                   console.log('success', response['data'].menList)  \n                   \n                 \n                   for(let i=0;i<response['data'].bothList.both.length;i++){\n                     this.bothBrandList.push(response['data'].bothList.both[i])\n                   \n                   }\n                   \n                  this.bothTotal=response['data'].bothList.bothTotal\n                    \n           } else {\n             console.log('Failure', response['responseMessage']) \n           }\n         }, error => {\n           console.log('something went wrong') \n          })\n          }\n  addBrand() {\n    this.menPage = 1\n    this.womenPage = 1\n    this.bothPage = 1\n    let credential = {\n      \"createdBy\":localStorage.getItem(\"adminId\"),\n      \"brandName\":this.brandDetail.name,\n      \"brandGender\":this.brandDetail.gender\n      \n      }\n          this.service.postApi('/addNewBrand', credential).subscribe(response => {\n           console.log(JSON.stringify(credential))\n            if (response['responseCode'] == 200) {\n                    this.service.success(response['responseMessage'])\n                    console.log('success', response['responseMessage'])           \n                    this.displayBrand()\n            } else {\n              this.service.error(response['responseMessage'])\n              console.log('Failure', response['responseMessage']) \n            }\n          }, error => {\n            console.log('something went wrong') \n            \n          })\n          // this.brandDetail.name = \"\"\n          // this.brandDetail.gender = \"\"\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/brand-management/brand-management.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/dashboard/dashboard.component.css\n// module id = ./src/app/dashboard/dashboard.component.css\n// module chunks = main","module.exports = \"<div class=\\\"mainbox\\\">\\n<app-side-menu></app-side-menu>\\n<div class=\\\"right-section\\\">\\n    <div class=\\\"copyrights\\\">Copyright © 2018 App name All Rights Reserved.</div>\\n    <div class=\\\"right-inner\\\">\\n        <h1 class=\\\"heading\\\">DASHBOARD</h1>\\n       <div class=\\\"dashbord-body\\\">\\n              <div class=\\\"row\\\">\\n                  <div class=\\\"col-sm-6 col-md-4\\\">\\n                      <fieldset class=\\\"global-fieldset\\\">\\n                          <legend>Users</legend>\\n                          <div class=\\\"filter-content\\\">\\n                              <div class=\\\"dashboard-content\\\">\\n                                <div class=\\\"dashboard-left common-text\\\">\\n\\n                                  <i class=\\\"fa fa-users\\\"></i>\\n                                </div>\\n                                <div class=\\\"dashboard-right common-text\\\">\\n                                  {{dashboardData.totalUser}}\\n                                </div>\\n                              </div>\\n                          </div>\\n                      </fieldset>\\n                  </div>\\n                  <div class=\\\"col-sm-6 col-md-4\\\">\\n                      <fieldset class=\\\"global-fieldset\\\">\\n                          <legend>Brands</legend>\\n                          <div class=\\\"filter-content\\\">\\n                              <div class=\\\"dashboard-content\\\">\\n                                <div class=\\\"dashboard-left common-text\\\">\\n\\n                                  <i class=\\\"fa fa-users\\\"></i>\\n                                </div>\\n                                <div class=\\\"dashboard-right common-text\\\">\\n                                        {{dashboardData.totalBrand}}\\n                                </div>\\n                              </div>\\n                          </div>\\n                      </fieldset>\\n                  </div>\\n                    <div class=\\\"col-sm-6 col-md-4\\\">\\n                      <fieldset class=\\\"global-fieldset\\\">\\n                          <legend>Products</legend>\\n                          <div class=\\\"filter-content\\\">\\n                              <div class=\\\"dashboard-content\\\">\\n                                <div class=\\\"dashboard-left common-text\\\">\\n\\n                                  <i class=\\\"fa fa-product-hunt\\\"></i>\\n                                </div>\\n                                <div class=\\\"dashboard-right common-text\\\">\\n                                        {{dashboardData.totalProduct}}\\n                                </div>\\n                              </div>\\n                          </div>\\n                      </fieldset>\\n                  </div>\\n               </div>\\n            </div>\\n        </div>\\n       </div>\\n</div>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/dashboard/dashboard.component.html\n// module id = ./src/app/dashboard/dashboard.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { DataService } from '../data.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\ndashboardData={}\n  constructor(public service : DataService, private router: Router) { }\n\n  ngOnInit() {\n    this.service.getApi('/totalCollection').subscribe(response => {\n     \n      if (response['responseCode'] == 200) {\n              console.log('success', response['data'])           \n              this.dashboardData=response['data']\n      } \n      else if(response['responseCode'] == 402) {\n               this.service.error(response['responseMessage'])\n               this.router.navigate(['/login'])\n      }\n      else if(response['responseCode'] == 403) {  \n        this.service.error(response['responseMessage'])\n        this.router.navigate(['/login'])\n      }\n      else {\n        console.log('Failure', response['responseMessage']) \n      }\n    }, error => {\n      console.log('something went wrong') \n      \n    })\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/dashboard/dashboard.component.ts","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse, HttpHeaders } from '@angular/common/http';\ndeclare var toastr:any\n@Injectable()\nexport class DataService {\n    token = localStorage.getItem(\"token\")\n  baseUrl = 'http://172.16.6.80:1468/admin'\n//   baseUrl = 'http://ec2-52-76-162-65.ap-southeast-1.compute.amazonaws.com:1468/admin'\n  getHttpOptions = {\n    headers: new HttpHeaders({\n        \"Content-Type\": \"application/json\",\n        \"token\": this.token\n    })\n}\n \n  constructor(public http: HttpClient) { }\ngetApi(url) {\n    return this.http.get(this.baseUrl + url, this.getHttpOptions);\n}\npostApi(url, data) {\n    return this.http.post(this.baseUrl + url, data, this.getHttpOptions);\n}\nerror (title) {\n    toastr.error(title)\n}\nsuccess(title:string,meassage?:string) {\n    toastr.success(title,meassage);\n}\nsetting() {\n    toastr.options = {\n        \"closeButton\": true,\n        \"debug\": false,\n        \"newestOnTop\": false,\n        \"progressBar\": false,\n        \"positionClass\": \"toast-bottom-right\",\n        \"preventDuplicates\": false,\n        \"onclick\": null,\n        \"showDuration\": \"400\",\n        \"hideDuration\": \"1000\",\n        \"timeOut\": \"5000\",\n        \"extendedTimeOut\": \"1000\",\n        \"showEasing\": \"swing\",\n        \"hideEasing\": \"linear\",\n        \"showMethod\": \"fadeIn\",\n        \"hideMethod\": \"fadeOut\",\n        'animate' : 'flyRight'\n\n     }\n}\nngOnInit() {\n    this.setting()\n}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/data.service.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/edit-user/edit-user.component.css\n// module id = ./src/app/edit-user/edit-user.component.css\n// module chunks = main","module.exports = \"<div class=\\\"mainbox\\\">\\n  <app-side-menu></app-side-menu>\\n  <div class=\\\"right-section\\\">\\n    <div class=\\\"copyrights\\\">Copyright © 2018 App name All Rights Reserved.</div>\\n    <div class=\\\"right-inner\\\">\\n              <div class=\\\"filter-block\\\">\\n                <fieldset class=\\\"global-fieldset\\\">\\n                   <legend>Edit User</legend>\\n                    <div class=\\\"filter-content\\\">\\n                      <form class=\\\"login_box_outer\\\" [formControlName]='editUserForm' novalidate>\\n                         <div class=\\\"common-detail-box\\\">\\n                            <div class=\\\"form-group row\\\" [ngClass]=\\\"{'has-error': (editUserForm.controls['name'].dirty && editUserForm.controls['name'].invalid)}\\\">\\n                               <label class=\\\"col-sm-4 label-right label-top\\\">Name</label>\\n                               <div class=\\\"col-sm-8\\\">\\n                                  <input class=\\\"form-control custom-input custom-control\\\" id=\\\"name\\\" name=\\\"name\\\" [(ngModel)]=\\\"editUser.name\\\" value=\\\"{{editUserDetail.name}}\\\" type=\\\"text\\\" [formControl]=\\\"editUserForm.controls['name']\\\"  maxlength=\\\"20\\\"/>\\n                                  <div class=\\\"errMsg\\\" *ngIf=\\\"editUserForm.controls['name'].dirty && editUserForm.controls['name'].invalid\\\">\\n                                      <span style='color:red' [ngClass]=\\\"{error:editUserForm.controls['name'].hasError('required')}\\\" *ngIf=\\\"editUserForm.controls['name'].hasError('required')\\\">*Please enter name.</span>\\n                                      <span style='color:red' [ngClass]=\\\"{error:editUserForm.controls['name'].hasError('minlength') && !editUserForm.controls['name'].hasError('pattern')}\\\" *ngIf=\\\"editUserForm.controls['name'].hasError('minlength') && !editUserForm.controls['name'].hasError('pattern')\\\">*Name must be minimum 2 characters.</span>\\n                                      <span style='color:red' [ngClass]=\\\"{error:editUserForm.controls['name'].hasError('pattern')}\\\" *ngIf=\\\"editUserForm.controls['name'].hasError('pattern')\\\">*Please enter valid name.</span>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"form-group row\\\" [ngClass]=\\\"{'has-error': (editUserForm.controls['email'].dirty && editUserForm.controls['email'].invalid)}\\\">\\n                               <label class=\\\"col-sm-4 label-right label-top\\\">Email</label>\\n                               <div class=\\\"col-sm-8\\\">\\n                                  <input type=\\\"text\\\" name=\\\"email\\\" [(ngModel)]=\\\"editUser.email\\\" id=\\\"email\\\" [formControl]=\\\"editUserForm.controls['email']\\\" class=\\\"form-control custom-input custom-control\\\" value=\\\"{{editUserDetail.email}}\\\" maxlength=\\\"60\\\">\\n                                  <div class=\\\"errMsg\\\" *ngIf=\\\"editUserForm.controls['email'].dirty && editUserForm.controls['email'].invalid\\\">\\n                                      <span style='color:red' [ngClass]=\\\"{error:editUserForm.controls['email'].hasError('required')}\\\" *ngIf=\\\"editUserForm.controls['email'].hasError('required')\\\">*Please enter an email.</span>\\n                                      <span style='color:red' [ngClass]=\\\"{error: editUserForm.controls['email'].hasError('pattern')}\\\"  *ngIf=\\\"editUserForm.controls['email'].hasError('pattern')\\\">*Please enter valid email.</span>\\n                                      <span style='color:red' [ngClass]=\\\"{error: editUserForm.controls['email'].hasError('maxlength') && editUserForm.controls['email'].dirty}\\\" *ngIf=\\\"editUserForm.controls['email'].hasError('maxlength') && ! editUserForm.controls['email'].hasError('pattern')\\\">*Please enter valid email.</span>\\n                                  </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"form-group row\\\" [ngClass]=\\\"{'has-error': (editUserForm.controls['age'].dirty && editUserForm.controls['age'].invalid)}\\\">\\n                               <label class=\\\"col-sm-4 label-right label-top\\\">Age</label>\\n                               <div class=\\\"col-sm-8\\\">\\n                                  <input class=\\\"form-control custom-input custom-control\\\" name=\\\"age\\\" id='age' [(ngModel)]=\\\"editUser.age\\\" value=\\\"{{editUserDetail.age}}\\\" type=\\\"text\\\" [formControl]=\\\"editUserForm.controls['age']\\\" minlength=\\\"1\\\" maxlength=\\\"3\\\"/>\\n                                  <div class=\\\"errMsg\\\" *ngIf=\\\"editUserForm.controls['age'].dirty && editUserForm.controls['age'].invalid\\\">\\n                                      <span style='color:red' [ngClass]=\\\"{error:editUserForm.controls['age'].hasError('required')}\\\"  *ngIf=\\\"editUserForm.controls['age'].hasError('required')\\\">*Please enter age.</span>\\n                                      <span style='color:red' [ngClass]=\\\"{error:editUserForm.controls['age'].hasError('pattern')}\\\"  *ngIf=\\\"editUserForm.controls['age'].hasError('pattern')\\\">*Please enter valid age.</span>\\n                                      </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"form-group row\\\">\\n                              <label class=\\\"col-sm-4 label-right label-top\\\">Gender</label>\\n                              <div class=\\\"col-sm-8\\\">\\n                               <select (ngModelChange)=\\\"onSelect($event)\\\" class=\\\"form-control custom-input custom-control angle\\\" [(ngModel)]=\\\"editUserDetail.gender\\\"  [ngModelOptions]=\\\"{standalone: true}\\\">  \\n                                 <option value=\\\"\\\" disabled>--Select--</option> \\n                                  <option *ngFor=\\\"let gen of gender\\\" value={{gen.name}} >{{gen.name}}</option>\\n                              </select>  \\n                              </div>\\n                           </div>\\n                            <div class=\\\"form-group row\\\" *ngIf = \\\"!condition\\\">\\n                               <label class=\\\"col-sm-4 label-right label-top\\\">Body Type</label>\\n                               <div class=\\\"col-sm-8\\\">\\n                                  <select name=\\\"bodyType\\\"  [(ngModel)]=\\\"editUserDetail.bodyType\\\" class=\\\"form-control custom-input custom-control angle\\\"  [ngModelOptions]=\\\"{standalone: true}\\\">\\n                                      <option value='' disabled>--Select--</option>  \\n                                      <option *ngFor=\\\"let body of editBody\\\" value={{body.name}}>{{body.name}}</option>  \\n                                  </select>\\n                               </div>\\n                            </div>\\n                            <div class=\\\"form-group row\\\" *ngIf = \\\"condition\\\">\\n                              <label class=\\\"col-sm-4 label-right label-top\\\">Body Type</label>\\n                              <div class=\\\"col-sm-8\\\">\\n                                 <select name=\\\"bodyType\\\"  [(ngModel)]=\\\"editUser.bodyType\\\" class=\\\"form-control custom-input custom-control angle\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n                                     <option value='' disabled>--Select--</option>  \\n                                     <option *ngFor=\\\"let body of selectedBody\\\" value={{body.name}}>{{body.name}}</option>  \\n                                 </select>\\n                              </div>\\n                           </div>\\n                           <div class=\\\"form-group row\\\" [ngClass]=\\\"{'has-error': (editUserForm.controls['height'].dirty && editUserForm.controls['height'].invalid)}\\\">\\n                            <label class=\\\"col-sm-4 label-right label-top\\\">Height</label>\\n                            <div class=\\\"col-sm-8\\\">\\n                               <input class=\\\"form-control custom-input custom-control\\\" name=\\\"height\\\" id='height' [(ngModel)]=\\\"editUser.height\\\" value=\\\"{{editUserDetail.height}}\\\" type=\\\"text\\\" [formControl]=\\\"editUserForm.controls['height']\\\" minlength=\\\"1\\\" maxlength=\\\"3\\\"/>\\n                               <div class=\\\"errMsg\\\" *ngIf=\\\"editUserForm.controls['height'].dirty && editUserForm.controls['height'].invalid\\\">\\n                                   <span style='color:red' [ngClass]=\\\"{error:editUserForm.controls['height'].hasError('required')}\\\"  *ngIf=\\\"editUserForm.controls['height'].hasError('required')\\\">*Please enter height.</span>\\n                                   <span style='color:red' [ngClass]=\\\"{error:editUserForm.controls['height'].hasError('pattern')}\\\"  *ngIf=\\\"editUserForm.controls['height'].hasError('pattern')\\\">*Please enter valid height.</span>\\n                                   </div>\\n                             </div>\\n                         </div>\\n                         <div class=\\\"form-group row\\\" [ngClass]=\\\"{'has-error': (editUserForm.controls['weight'].dirty && editUserForm.controls['weight'].invalid)}\\\">\\n                          <label class=\\\"col-sm-4 label-right label-top\\\">Weight</label>\\n                          <div class=\\\"col-sm-8\\\">\\n                             <input class=\\\"form-control custom-input custom-control\\\" name=\\\"weight\\\" id='weight' [(ngModel)]=\\\"editUser.weight\\\" value=\\\"{{editUserDetail.weight}}\\\" type=\\\"text\\\" [formControl]=\\\"editUserForm.controls['weight']\\\" minlength=\\\"1\\\" maxlength=\\\"3\\\"/>\\n                             <div class=\\\"errMsg\\\" *ngIf=\\\"editUserForm.controls['weight'].dirty && editUserForm.controls['weight'].invalid\\\">\\n                                 <span style='color:red' [ngClass]=\\\"{error:editUserForm.controls['weight'].hasError('required')}\\\"  *ngIf=\\\"editUserForm.controls['weight'].hasError('required')\\\">*Please enter weight.</span>\\n                                 <span style='color:red' [ngClass]=\\\"{error:editUserForm.controls['weight'].hasError('pattern')}\\\"  *ngIf=\\\"editUserForm.controls['weight'].hasError('pattern')\\\">*Please enter valid weight.</span>\\n                                 </div>\\n                           </div>\\n                       </div>\\n                            <div class=\\\"table-button text-center mt30\\\">\\n                               <button (click)=\\\"saveChanges()\\\" class=\\\"btn btn-red\\\">Save </button>\\n                               <button (click)=\\\"cancel()\\\" class=\\\"btn btn-danger\\\">Cancel</button>\\n                            </div>\\n                         </div>\\n                      </form>\\n                    </div>\\n                </fieldset>\\n              </div>        \\n          </div>  \\n        </div>\\n </div>\\n\\n\\n\\n\\n\\n\\n <!-- <form class=\\\"login_box_outer\\\" [formGroup]='editUserForm' novalidate>\\n    <div class=\\\"common-detail-box\\\">\\n       <div class=\\\"form-group row\\\" [ngClass]=\\\"{'has-error': (editUserForm.controls['name'].dirty && addUserForm.controls['name'].invalid)}\\\">\\n          <label class=\\\"col-sm-4 label-right label-top\\\">Name</label>\\n          <div class=\\\"col-sm-8\\\">\\n             <input class=\\\"form-control\\\" id=\\\"name\\\" name=\\\"name\\\" [(ngModel)]=\\\"userDetail.name\\\" placeholder=\\\"Name\\\" type=\\\"text\\\" [formControl]=\\\"addUserForm.controls['name']\\\"  maxlength=\\\"20\\\"/>\\n             <div class=\\\"errMsg\\\" *ngIf=\\\"addUserForm.controls['name'].dirty && addUserForm.controls['name'].invalid\\\">\\n               <span style='color:red' [ngClass]=\\\"{error:addUserForm.controls['name'].hasError('required')}\\\" *ngIf=\\\"addUserForm.controls['name'].hasError('required')\\\">*Please enter name.</span>\\n               <span style='color:red' [ngClass]=\\\"{error:addUserForm.controls['name'].hasError('minlength') && !addUserForm.controls['name'].hasError('pattern')}\\\" *ngIf=\\\"addUserForm.controls['name'].hasError('minlength') && !addUserForm.controls['name'].hasError('pattern')\\\">*Name must be minimum 2 characters.</span>\\n               <span style='color:red' [ngClass]=\\\"{error:addUserForm.controls['name'].hasError('pattern')}\\\" *ngIf=\\\"addUserForm.controls['name'].hasError('pattern')\\\">*Please enter valid name.</span>\\n             </div>\\n           </div>\\n       </div>\\n       <div class=\\\"form-group row\\\" [ngClass]=\\\"{'has-error': (addUserForm.controls['email'].dirty && addUserForm.controls['email'].invalid)}\\\">\\n          <label class=\\\"col-sm-4 label-right label-top\\\">Email</label>\\n          <div class=\\\"col-sm-8\\\">\\n             <input type=\\\"text\\\" name=\\\"email\\\" [(ngModel)]=\\\"userDetail.email\\\" id=\\\"email\\\" [formControl]=\\\"addUserForm.controls['email']\\\" class=\\\"form-control\\\" placeholder=\\\"Email\\\" maxlength=\\\"60\\\">\\n             <div class=\\\"errMsg\\\" *ngIf=\\\"addUserForm.controls['email'].dirty && addUserForm.controls['email'].invalid\\\">\\n               <span style='color:red' [ngClass]=\\\"{error:addUserForm.controls['email'].hasError('required')}\\\" *ngIf=\\\"addUserForm.controls['email'].hasError('required')\\\">*Please enter an email.</span>\\n               <span style='color:red' [ngClass]=\\\"{error: addUserForm.controls['email'].hasError('pattern')}\\\"  *ngIf=\\\"addUserForm.controls['email'].hasError('pattern')\\\">*Please enter valid email.</span>\\n               <span style='color:red' [ngClass]=\\\"{error: addUserForm.controls['email'].hasError('maxlength') && addUserForm.controls['email'].dirty}\\\" *ngIf=\\\"addUserForm.controls['email'].hasError('maxlength') && ! addUserForm.controls['email'].hasError('pattern')\\\">*Please enter valid email.</span>\\n           </div>\\n           </div>\\n       </div>\\n       <div class=\\\"form-group row\\\" [ngClass]=\\\"{'has-error': (editUserForm.controls['age'].dirty && editUserForm.controls['age'].invalid)}\\\">\\n          <label class=\\\"col-sm-4 label-right label-top\\\">Age</label>\\n          <div class=\\\"col-sm-8\\\">\\n          <input class=\\\"form-control\\\" name=\\\"age\\\" id='age' [(ngModel)]=\\\"userDetail.age\\\" placeholder=\\\"Age\\\" type=\\\"text\\\" [formControl]=\\\"addUserForm.controls['age']\\\" minlength=\\\"1\\\" maxlength=\\\"3\\\"/>\\n<div class=\\\"errMsg\\\" *ngIf=\\\"addUserForm.controls['age'].dirty && addUserForm.controls['age'].invalid\\\">\\n<span style='color:red' [ngClass]=\\\"{error:addUserForm.controls['age'].hasError('required')}\\\"  *ngIf=\\\"addUserForm.controls['age'].hasError('required')\\\">*Please enter age.</span>\\n<span style='color:red' [ngClass]=\\\"{error:addUserForm.controls['age'].hasError('pattern')}\\\"  *ngIf=\\\"addUserForm.controls['age'].hasError('pattern')\\\">*Please enter valid age.</span>\\n</div>\\n          </div>\\n       </div>\\n       \\n       \\n        <div class=\\\"form-group row\\\">\\n         <label class=\\\"col-sm-4 label-right label-top\\\">Gender</label>\\n         <div class=\\\"col-sm-8\\\">\\n          <select (ngModelChange)=\\\"onSelect($event)\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"userDetail.gender\\\" [ngModelOptions]=\\\"{standalone: true}\\\">  \\n            <option value=\\\"select\\\" disabled>--Select--</option> \\n             <option *ngFor=\\\"let gen of gender\\\" value={{gen.name}} >{{gen.name}}</option>\\n         </select>  \\n         </div>\\n      </div>\\n       \\n       <div class=\\\"form-group row\\\">\\n         <label class=\\\"col-sm-4 label-right label-top\\\">Body Type</label>\\n         <div class=\\\"col-sm-8\\\">\\n           \\n          <select class=\\\"form-control\\\" name=\\\"bodyType\\\" [disabled]=\\\"!userDetail.gender\\\"  [(ngModel)]=\\\"userDetail.bodyType\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n              <option value='select' disabled>--Select--</option>  \\n              <option *ngFor=\\\"let body of selectedBody\\\" value={{body.name}}>{{body.name}}</option>\\n         </select>\\n           \\n         </div>\\n      </div>\\n\\n       <div class=\\\"form-group row\\\" [ngClass]=\\\"{'has-error': (addUserForm.controls['height'].dirty && addUserForm.controls['height'].invalid)}\\\">\\n           <label class=\\\"col-sm-4 label-right label-top\\\">height</label>\\n           <div class=\\\"col-sm-8\\\">\\n              <input class=\\\"form-control\\\" id=\\\"height\\\" name=\\\"height\\\" [(ngModel)]=\\\"userDetail.height\\\" placeholder=\\\"height\\\" type=\\\"text\\\" [formControl]=\\\"addUserForm.controls['height']\\\" maxlength=\\\"20\\\"/>\\n              <div class=\\\"errMsg\\\" *ngIf=\\\"addUserForm.controls['height'].dirty && addUserForm.controls['height'].invalid\\\">\\n                <span style='color:red' [ngClass]=\\\"{error:addUserForm.controls['height'].hasError('required')}\\\" *ngIf=\\\"addUserForm.controls['height'].hasError('required')\\\">*Please enter height.</span>\\n                <span style='color:red' [ngClass]=\\\"{error:addUserForm.controls['height'].hasError('minlength') && !addUserForm.controls['height'].hasError('pattern')}\\\" *ngIf=\\\"addUserForm.controls['height'].hasError('minlength') && !addUserForm.controls['height'].hasError('pattern')\\\">*height must be minimum 2 characters.</span>\\n                <span style='color:red' [ngClass]=\\\"{error:addUserForm.controls['height'].hasError('pattern')}\\\" *ngIf=\\\"addUserForm.controls['height'].hasError('pattern')\\\">*Please enter valid height.</span>\\n              </div>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group row\\\" [ngClass]=\\\"{'has-error': (addUserForm.controls['weight'].dirty && addUserForm.controls['weight'].invalid)}\\\">\\n           <label class=\\\"col-sm-4 label-right label-top\\\">weight</label>\\n           <div class=\\\"col-sm-8\\\">\\n              <input class=\\\"form-control\\\" id=\\\"weight\\\" name=\\\"weight\\\" [(ngModel)]=\\\"userDetail.weight\\\" placeholder=\\\"weight\\\" type=\\\"text\\\" [formControl]=\\\"addUserForm.controls['weight']\\\" maxlength=\\\"20\\\"/>\\n              <div class=\\\"errMsg\\\" *ngIf=\\\"addUserForm.controls['weight'].dirty && addUserForm.controls['weight'].invalid\\\">\\n                <span style='color:red' [ngClass]=\\\"{error:addUserForm.controls['weight'].hasError('required')}\\\" *ngIf=\\\"addUserForm.controls['weight'].hasError('required')\\\">*Please enter weight.</span>\\n                <span style='color:red' [ngClass]=\\\"{error:addUserForm.controls['weight'].hasError('minlength') && !addUserForm.controls['weight'].hasError('pattern')}\\\" *ngIf=\\\"addUserForm.controls['weight'].hasError('minlength') && !addUserForm.controls['weight'].hasError('pattern')\\\">*weight must be minimum 2 characters.</span>\\n                <span style='color:red' [ngClass]=\\\"{error:addUserForm.controls['weight'].hasError('pattern')}\\\" *ngIf=\\\"addUserForm.controls['weight'].hasError('pattern')\\\">*Please enter valid weight.</span>\\n              </div>\\n            </div>\\n        </div>\\n       <div class=\\\"table-button text-center mt30\\\">\\n          <button class=\\\"btn btn-red\\\" (click)=\\\"save()\\\">Save </button>\\n          <button (click)=\\\"cancel()\\\" class=\\\"btn btn-danger\\\">Cancel</button>\\n       </div>\\n    </div>\\n  </form> -->\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/edit-user/edit-user.component.html\n// module id = ./src/app/edit-user/edit-user.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { DataService } from '../data.service';\nimport { Router } from '@angular/router';\nimport {Location} from '@angular/common';\nimport { FormGroup, FormBuilder, Validators, MaxLengthValidator } from '@angular/forms';\n\n@Component({\n  selector: 'app-edit-user',\n  templateUrl: './edit-user.component.html',\n  styleUrls: ['./edit-user.component.css']\n})\nexport class EditUserComponent implements OnInit {\n  editUserForm: FormGroup;\n  editUserDetail:any\n  selectedProduct:any\n  selectedBody:any\n  editBody:any\n  condition:boolean=false\n  male:string=\"Male\"\n  female:string=\"Female\"\n  editUser:any={\"bodyType\": \"\", \"gender\": \"\"}\n  gender = [\n\n\n  {id:1, name:\"Male\"},\n  {id:2, name:\"Female\"}    \n\n]\nmaleBodyType = [\n\n  {id:1, name:\"Slim Jim\"},\n  {id:2, name:\"Muscle Man\"},\n  {id:3, name:\"Big Guy\"},\n  {id:4, name:\"Bulky\"}\n]\n\nfemaleBodyType = [\n  {id:1, name:\"Rectangle\"},\n  {id:2, name:\"Peer\"},\n  {id:3, name:\"Triangle\"},\n  {id:4, name:\"Hourglass\"}\n]\n\n  constructor(public service: DataService, private router: Router, private _location: Location,  private formBuilder: FormBuilder) { }\n\n  ngOnInit() {\n   this.editUserForm = this.formBuilder.group({\n      name:   ['', Validators.compose([Validators.required, Validators.pattern(/^[^\\s][a-zA-Z ]*$/), Validators.minLength(2)])],\n      email:  ['', Validators.compose([Validators.required, Validators.pattern(/^[A-Z0-9_]+([\\.][A-Z0-9_]+)*@[A-Z0-9-]+(\\.[a-zA-Z]{2,3})+$/i), Validators.maxLength(50)])],\n      age:    ['', Validators.compose([Validators.required, Validators.pattern(/^[1-9][0-9]{1,7}$/)])],\n      height: ['', Validators.compose([Validators.required, Validators.pattern(/^[1-9][0-9]{1,7}$/)])],\n      weight: ['', Validators.compose([Validators.required, Validators.pattern(/^[1-9][0-9]{1,7}$/)])]\n\n    });\n    let credential = {\n    \"userId\":localStorage.getItem(\"userId\")\n }\n    this.service.postApi('/userDetail', credential).subscribe(response => {\n      if (response['responseCode'] == 200) {\n              console.log('success', response['data'])           \n              this.editUserDetail=response['data']\n              \n              if(this.editUserDetail.gender == \"Male\") {\n                this.editBody = this.maleBodyType\n              }\n              else if(this.editUserDetail.gender == \"Female\") {\n                this.editBody = this.femaleBodyType\n              }\n              \n              \n      } else {\n        console.log('Failure', response['responseMessage']) \n      }\n    }, error => {\n      console.log('something went wrong') \n      \n    })\n  }\n  saveChanges() {\n    let credential = {\n      \"userId\":localStorage.getItem(\"userId\"),\n      \"name\":this.editUser.name,\n      \"email\":this.editUser.email,\n      \"age\":this.editUser.age,\n      \"bodyType\":this.editUser.bodyType,\n      \"gender\":this.editUser.gender,\n      \"height\":this.editUser.height,\n      \"weight\":this.editUser.weight,\n\n }\n    this.service.postApi('/editUser', credential).subscribe(response => {\n      console.log(JSON.stringify(credential))\n      if (response['responseCode'] == 200) {\n              console.log('success', response['responseMessage'])           \n              this.router.navigate(['/user-management'])\n      } else {\n        console.log('Failure', response['responseMessage']) \n      }\n    }, error => {\n      console.log('something went wrong') \n      \n    })\n  }\n  cancel() {\n    this._location.back();\n  }\n    onSelect(productId) {\n      this.editUser.bodyType=\"\"\n      \nthis.condition = true\n      let maleBodyType = [\n\n        {id:1, name:\"Slim Jim\"},\n        {id:2, name:\"Muscle Man\"},\n        {id:3, name:\"Big Guy\"},\n        {id:4, name:\"Bulky\"}\n      ]\n      \n      let femaleBodyType = [\n        {id:1, name:\"Rectangle\"},\n        {id:2, name:\"Peer\"},\n        {id:3, name:\"Triangle\"},\n        {id:4, name:\"Hourglass\"}\n      ]\n    this.selectedProduct = null;\n    for (var i = 0; i < this.gender.length; i++)\n    {\n      if (this.gender[i].name == productId) {\n        this.selectedProduct = this.gender[i];\n       \n      }\n    }\n    if(this.selectedProduct.name == \"Male\") {\n     \n      this.selectedBody = maleBodyType\n    }\n    else {\n    \n      this.selectedBody = femaleBodyType\n    \n    }\n this.editUser.bodyType = \" \"\n}\n \n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/edit-user/edit-user.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/login/login.component.css\n// module id = ./src/app/login/login.component.css\n// module chunks = main","module.exports = \"<header class=\\\"beforelogin\\\">\\n  <div class=\\\"logo\\\"><a><img src=\\\"assets/img/logo.png\\\"></a></div>\\n</header>\\n  <div class=\\\"before-login-wrapper\\\">\\n     <div class=\\\"inner-content clearfix\\\">\\n         <div class=\\\"login-main-content\\\">\\n            <div class=\\\"before-login-logo\\\">\\n             \\n             </div>\\n             <form class=\\\"login_box_outer\\\" [formGroup]='loginForm' novalidate>\\n\\n             <div class=\\\"login-content-box\\\">\\n                 <h2 class=\\\"heading\\\">Login</h2>\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': (loginForm.controls['email'].dirty && loginForm.controls['email'].invalid)}\\\">\\n                    <label>Email Address <span class=\\\"require\\\">*</span></label>\\n                     <input type=\\\"text\\\" name=\\\"email\\\" id=\\\"email\\\" [(ngModel)]=\\\"loginData.email\\\" [formControl]=\\\"loginForm.controls['email']\\\" class=\\\"form-control\\\" placeholder=\\\"Email\\\" maxlength=\\\"60\\\">\\n                     <div class=\\\"errMsg\\\" *ngIf=\\\"loginForm.controls['email'].dirty && loginForm.controls['email'].invalid\\\">\\n                      <span style='color:red' [ngClass]=\\\"{error:loginForm.controls['email'].hasError('required')}\\\" *ngIf=\\\"loginForm.controls['email'].hasError('required')\\\">*Please enter an email.</span>\\n                      <span style='color:red' [ngClass]=\\\"{error: loginForm.controls['email'].hasError('pattern')}\\\"  *ngIf=\\\"loginForm.controls['email'].hasError('pattern')\\\">*Please enter valid email.</span>\\n                      <span style='color:red' [ngClass]=\\\"{error: loginForm.controls['email'].hasError('maxlength') && loginForm.controls['email'].dirty}\\\" *ngIf=\\\"loginForm.controls['email'].hasError('maxlength') && ! loginForm.controls['email'].hasError('pattern')\\\">*Please enter valid email.</span>\\n                  </div>\\n                  </div> \\n                  <div class=\\\"form-group\\\">\\n                    <label>Password <span class=\\\"require\\\">*</span></label>\\n                     <input type=\\\"password\\\" name=\\\"password\\\" id=\\\"password\\\" [(ngModel)]=\\\"loginData.password\\\" [formControl]=\\\"loginForm.controls['password']\\\" class=\\\"form-control\\\" placeholder=\\\"Password\\\" minlength=\\\"8\\\" maxlength=\\\"16\\\">\\n                     <div class=\\\"errMsg\\\" *ngIf=\\\"loginForm.controls['password'].dirty && loginForm.controls['password'].invalid\\\">\\n                      <span style='color:red' [ngClass]=\\\"{error:loginForm.controls['password'].hasError('required')}\\\" *ngIf=\\\"loginForm.controls['password'].hasError('required')\\\">*Please enter Password.</span>\\n                      <span style='color:red' [ngClass]=\\\"{error: loginForm.controls['password'].hasError('minlength') && loginForm.controls['password'].dirty}\\\" *ngIf=\\\"loginForm.controls['password'].hasError('minlength')\\\">*Please enter minimum 8 characters.</span>\\n                      <span style='color:red' [ngClass]=\\\"{error: loginForm.controls['password'].hasError('maxlength') && loginForm.controls['password'].dirty}\\\" *ngIf=\\\"loginForm.controls['password'].hasError('maxlength')\\\">*Please enter maximum 16 characters.</span>\\n                    </div>\\n                  </div> \\n                  <div class=\\\"remeberme-block  clearfix \\\">\\n                     <div class=\\\"pull-left\\\">\\n                         <input type=\\\"checkbox\\\" id=\\\"subscribeNews\\\" name=\\\"remeberMe\\\" [(ngModel)]=\\\"loginData.rememberMe\\\" [formControl]=\\\"loginForm.controls['rememberMe']\\\" value=\\\"newsletter\\\">\\n                      <label for=\\\"subscribeNews\\\">Remember me</label>\\n                     </div>\\n                  </div>\\n                  <div class=\\\"button-box\\\">\\n                     <button (click)=\\\"login()\\\" type=\\\"submit\\\" [disabled]=\\\"loginForm.invalid\\\" class=\\\"btn btn-red width100\\\">Login</button>\\n                  </div>\\n              </div>\\n              </form>\\n           </div>\\n      </div>\\n\\n    </div>\\n\\n\\n    <!-- <form [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"dealerSubmit(dealerForm.value)\\\">\\n            <div class=\\\"select-profile-img\\\">\\n           \\n            <img src=\\\"{{imageUrl}}\\\" >\\n            <span class=\\\"camera fas fa-camera\\\"><input type=\\\"file\\\" (change)=\\\"fileSelect($event)\\\" accept=\\\"image/jpeg,image/jpg,image/png\\\"/></span>\\n           </div>\\n           \\n           <div class=\\\"row\\\">\\n             <div class=\\\"col-md-6\\\">\\n             <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': (dealerForm.controls['firstName'].dirty && dealerForm.controls['firstName'].invalid)}\\\">\\n              <input class=\\\"form-control\\\" id=\\\"firstname\\\" placeholder=\\\"First Name\\\" type=\\\"text\\\" [formControl]=\\\"dealerForm.controls['firstName']\\\" maxlength=\\\"20\\\" />\\n              <div class=\\\"errMsg\\\" *ngIf=\\\"dealerForm.controls['firstName'].dirty && dealerForm.controls['firstName'].invalid\\\">\\n                <span style='color:red' [ngClass]=\\\"{error:dealerForm.controls['firstName'].hasError('required')}\\\" *ngIf=\\\"dealerForm.controls['firstName'].hasError('required')\\\">*Please enter first name.</span>\\n                <span style='color:red' [ngClass]=\\\"{error:dealerForm.controls['firstName'].hasError('minlength') && !dealerForm.controls['firstName'].hasError('pattern')}\\\" *ngIf=\\\"dealerForm.controls['firstName'].hasError('minlength') && !dealerForm.controls['firstName'].hasError('pattern')\\\">*First name must be minimum 2 characters.</span>\\n                <span style='color:red' [ngClass]=\\\"{error:!dealerForm.controls['firstName'].hasError('minlength') && dealerForm.controls['firstName'].hasError('pattern')}\\\" *ngIf=\\\"!dealerForm.controls['firstName'].hasError('minlength') && dealerForm.controls['firstName'].hasError('pattern')\\\">*Please enter valid first name.</span>\\n              </div>\\n             </div>\\n           </div>\\n            <div class=\\\"col-md-6\\\">\\n             <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': (dealerForm.controls['lastName'].dirty && dealerForm.controls['lastName'].invalid)}\\\">\\n              <input class=\\\"form-control\\\" id=\\\"lastname\\\" placeholder=\\\"Last Name\\\" type=\\\"text\\\" [formControl]=\\\"dealerForm.controls['lastName']\\\" maxlength=\\\"20\\\"/>\\n              <div class=\\\"errMsg\\\" *ngIf=\\\"dealerForm.controls['lastName'].dirty && dealerForm.controls['lastName'].invalid\\\">\\n                <span style='color:red' [ngClass]=\\\"{error:dealerForm.controls['lastName'].hasError('required')}\\\"  *ngIf=\\\"dealerForm.controls['lastName'].hasError('required')\\\">*Please enter last name.</span>\\n                <span style='color:red' [ngClass]=\\\"{error:dealerForm.controls['lastName'].hasError('minlength') && !dealerForm.controls['lastName'].hasError('pattern')}\\\"  *ngIf=\\\"dealerForm.controls['lastName'].hasError('minlength') && !dealerForm.controls['lastName'].hasError('pattern')\\\">*Last name must be minimum 2 characters.</span>\\n                <span style='color:red' [ngClass]=\\\"{error:dealerForm.controls['lastName'].hasError('pattern') && !dealerForm.controls['lastName'].hasError('minlength')}\\\"  *ngIf=\\\"dealerForm.controls['lastName'].hasError('pattern') && !dealerForm.controls['lastName'].hasError('minlength')\\\">*Please enter valid last name.</span>\\n              </div>\\n             </div>\\n           </div>\\n           \\n           <div class=\\\"col-md-6\\\">\\n             <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': (dealerForm.controls['dealerName'].dirty && dealerForm.controls['dealerName'].invalid)}\\\">\\n              <input class=\\\"form-control\\\" id=\\\"dealername\\\" placeholder=\\\"Dealership Name\\\" type=\\\"text\\\" [formControl]=\\\"dealerForm.controls['dealerName']\\\" maxlength=\\\"50\\\"/>\\n              <div class=\\\"errMsg\\\" *ngIf=\\\"dealerForm.controls['dealerName'].dirty && dealerForm.controls['dealerName'].invalid\\\">\\n                <span style='color:red' [ngClass]=\\\"{error:dealerForm.controls['dealerName'].hasError('required')}\\\"  *ngIf=\\\"dealerForm.controls['dealerName'].hasError('required')\\\">*Please enter dealership name.</span>\\n                <span style='color:red' [ngClass]=\\\"{error:dealerForm.controls['dealerName'].hasError('minlength') && !dealerForm.controls['dealerName'].hasError('pattern')}\\\"  *ngIf=\\\"dealerForm.controls['dealerName'].hasError('minlength') && !dealerForm.controls['dealerName'].hasError('pattern')\\\">*Dealership name must be minimum 3 characters.</span>\\n                <span style='color:red' [ngClass]=\\\"{error:dealerForm.controls['dealerName'].hasError('pattern') && !dealerForm.controls['dealerName'].hasError('minlength')}\\\"  *ngIf=\\\"dealerForm.controls['dealerName'].hasError('pattern') && !dealerForm.controls['dealerName'].hasError('minlength')\\\">*Please enter valid dealership name.</span>\\n              </div>\\n             </div>\\n           </div>\\n           \\n           <div class=\\\"col-md-6\\\">\\n             <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': (dealerForm.controls['email'].dirty && dealerForm.controls['email'].invalid)}\\\">\\n              <input class=\\\"form-control\\\" id='email' placeholder=\\\"Email ID\\\" type=\\\"text\\\" [formControl]=\\\"dealerForm.controls['email']\\\" maxlength=\\\"60\\\" />\\n              <div class=\\\"errMsg\\\" *ngIf=\\\"dealerForm.controls['email'].dirty && dealerForm.controls['email'].invalid\\\">\\n                <span style='color:red' [ngClass]=\\\"{error:dealerForm.controls['email'].hasError('required')}\\\" *ngIf=\\\"dealerForm.controls['email'].hasError('required')\\\">*Please enter an email.</span>\\n                <span style='color:red' [ngClass]=\\\"{error: dealerForm.controls['email'].hasError('pattern')}\\\"  *ngIf=\\\"dealerForm.controls['email'].hasError('pattern')\\\">*Please enter valid email.</span>\\n                <span style='color:red' [ngClass]=\\\"{error: dealerForm.controls['email'].hasError('maxlength') && dealerForm.controls['email'].dirty}\\\" *ngIf=\\\"dealerForm.controls['email'].hasError('maxlength') && ! dealerForm.controls['email'].hasError('pattern')\\\">*Please enter valid email.</span>\\n\\n              </div>\\n             </div>\\n           </div>\\n           \\n           <div class=\\\"col-md-6\\\">\\n             <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': (dealerForm.controls['phoneNo'].dirty && dealerForm.controls['phoneNo'].invalid)}\\\">\\n              <input class=\\\"form-control\\\" id='phoneNo' placeholder=\\\"Contact No.\\\" type=\\\"text\\\" [formControl]=\\\"dealerForm.controls['phoneNo']\\\" maxlength=\\\"12\\\" minlength=\\\"10\\\"/>\\n              <div class=\\\"errMsg\\\" *ngIf=\\\"dealerForm.controls['phoneNo'].dirty && dealerForm.controls['phoneNo'].invalid\\\">\\n                <span style='color:red' [ngClass]=\\\"{error:dealerForm.controls['phoneNo'].hasError('required')}\\\"  *ngIf=\\\"dealerForm.controls['phoneNo'].hasError('required')\\\">*Please enter contact no.</span>\\n                <span style='color:red' [ngClass]=\\\"{error:dealerForm.controls['phoneNo'].hasError('pattern')}\\\"  *ngIf=\\\"dealerForm.controls['phoneNo'].hasError('pattern')\\\">*Please enter valid contact no.</span>\\n              </div>\\n             </div>\\n           </div>\\n           \\n            <div class=\\\"col-md-6\\\">\\n             <div class=\\\"form-group\\\">\\n              <select class=\\\"form-control select_style2\\\" [formControl]=\\\"dealerForm.controls['country']\\\">\\n                <option value=\\\"\\\">Select Country</option>\\n                <option value=\\\"US\\\">US</option>\\n                <option value=\\\"CANADA\\\">Canada</option>\\n              </select>\\n              <span style='color:red' [ngClass]=\\\"{error:dealerForm.controls['country'].hasError('required') &&  dealerForm.get('country').touched}\\\" *ngIf=\\\"dealerForm.controls['country'].hasError('required') &&  dealerForm.get('country').touched\\\">*Please select country.</span>\\n             </div>\\n           </div>\\n           \\n            <div class=\\\"col-md-6\\\">\\n             <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': (dealerForm.controls['pin'].dirty && dealerForm.controls['pin'].invalid)}\\\">\\n              <input class=\\\"form-control\\\" id='pin' placeholder=\\\"Zip Code\\\" type=\\\"text\\\" [formControl]=\\\"dealerForm.controls['pin']\\\" maxlength=\\\"6\\\" (change)='checkfornum()'/>\\n              <div class=\\\"errMsg\\\" *ngIf=\\\"dealerForm.controls['pin'].dirty && dealerForm.controls['pin'].invalid\\\">\\n                \\n                <span style='color:red' [ngClass]=\\\"{error: dealerForm.controls['pin'].hasError('required') && dealerForm.controls['pin'].touched}\\\" *ngIf=\\\"dealerForm.controls['pin'].hasError('required')\\\">*Please enter postal code.</span>\\n              <span style='color:red' [ngClass]=\\\"{error: dealerForm.controls['pin'].hasError('minlength') && dealerForm.controls['pin'].dirty  && pinValid} \\\" *ngIf=\\\"dealerForm.controls['pin'].hasError('minlength') && !dealerForm.controls['pin'].hasError('pattern')  && pinValid\\\">*Postal code must be between 3 to 6 characters.</span>\\n              <span style='color:red' [ngClass]=\\\"{error: dealerForm.controls['pin'].hasError('pattern') && dealerForm.controls['pin'].dirty}\\\" *ngIf=\\\"dealerForm.controls['pin'].hasError('pattern') && !dealerForm.controls['pin'].hasError(minlength)\\\">*Please enter valid postal code</span>\\n              <span style='color:red' [ngClass]=\\\"{error: !dealerForm.controls['pin'].hasError('required') && dealerForm.controls['pin'].dirty && !pinValid}\\\" *ngIf=\\\"!dealerForm.controls['pin'].hasError('required') && !dealerForm.controls['pin'].hasError(minlength) && !pinValid\\\">*Please enter valid postal code.</span>\\n            </div>\\n             </div>\\n           </div>\\n           \\n           <div class=\\\"col-md-6\\\">\\n             <div class=\\\"form-group\\\">\\n              <select class=\\\"form-control select_style2\\\" [formControl]=\\\"dealerForm.controls['dealerType']\\\">\\n                <option  value=\\\"\\\">Select Your Dealership Type</option>\\n                <option value=\\\"STANDARD\\\">Standard</option>\\n                <option value=\\\"SPONSORED\\\">Sponsored</option>\\n              </select>\\n              <span style='color:red' [ngClass]=\\\"{error:dealerForm.controls['dealerType'].hasError('required')  &&  dealerForm.get('dealerType').touched}\\\" *ngIf=\\\"dealerForm.controls['dealerType'].hasError('required') &&  dealerForm.get('dealerType').touched\\\">*Please select dealership type.</span>\\n             </div>\\n           </div>\\n           \\n           <div class=\\\"col-md-6\\\">\\n             <button type=\\\"submit\\\"  class=\\\"btn btn-green btn-large btn-block\\\" [disabled]=\\\"dealerForm.invalid\\\">PAY $100</button>\\n           </div>\\n           \\n           </div>\\n           \\n         </form> -->\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/login/login.component.html\n// module id = ./src/app/login/login.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { DataService } from '../data.service';\nimport { ToastrService } from 'ngx-toastr';\ndeclare var $: any\n\n@Component ({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  loginForm: FormGroup;\n  isSubmitted: boolean = false;\n  loginData:any={}\n  rememberMeEmail:any\n  rememberMePassword:any\n  rememberMeCheck:any\n  token: any;\n  constructor(private router: Router, private formBuilder: FormBuilder, public service : DataService, private toastr: ToastrService) { }\n\n  ngOnInit() {\n   this.loginForm = this.formBuilder.group({\n      email:['', Validators.compose([Validators.required, Validators.pattern(/^[A-Z0-9_]+([\\.][A-Z0-9_]+)*@[A-Z0-9-]+(\\.[a-zA-Z]{2,3})+$/i), Validators.maxLength(50)])],\n      password:['', Validators.compose([Validators.required,  Validators.maxLength(16), Validators.minLength(8)])],\n      rememberMe:[]\n    });\n    $(function() {\n      $('#email,#password').on('keypress', function(e) {\n          if (e.which == 32)\n              return false;\n      });\n    });\n    this.loginData.email = localStorage.getItem(\"email\")\n    this.loginData.password = localStorage.getItem(\"password\")\n    this.loginData.rememberMe = true\n  }\n  \n  login() {\n    let credential = {\n      \"email\":this.loginData.email,\n      \"password\": this.loginData.password\n    }\n    this.service.postApi('/login', credential).subscribe(response => {\n     \n      if (response['responseCode'] == 200) {\n              console.log('success', response['responseMessage']) \n              localStorage.setItem(\"adminId\",response['data']._id)\n              localStorage.setItem(\"token\",response['data'].token)\n              if(this.loginData.rememberMe == true) {\n                localStorage.setItem('email',this.loginData.email)\n                localStorage.setItem('password',this.loginData.password)\n              }\n             \n              this.router.navigate(['/dashboard'])\n      } else {\n        this.service.error('Invalid Email')\n        console.log('Failure', response['responseMessage']) \n      }\n    }, error => {\n      console.log('something went wrong') \n      \n    })\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/login/login.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/product-management/product-management.component.css\n// module id = ./src/app/product-management/product-management.component.css\n// module chunks = main","module.exports = \"<div class=\\\"mainbox\\\">\\n  <app-side-menu></app-side-menu>\\n<div class=\\\"right-section\\\">\\n  <div class=\\\"copyrights\\\">Copyright © 2018 App name All Rights Reserved.</div>\\n  <div class=\\\"right-inner\\\">\\n      \\n    <h1 class=\\\"heading\\\">PRODUCT MANAGEMENT</h1>\\n    <div class=\\\"filter-block\\\">\\n          <fieldset class=\\\"global-fieldset\\\">\\n              <legend>Product Board</legend>\\n              <div class=\\\"filter-content\\\">\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-sm-6\\\">\\n                       <div class=\\\"form-group\\\">\\n                          <div class=\\\"search-icon\\\">\\n                             <input type=\\\"text\\\" [(ngModel)]=\\\"searchProduct.data\\\" class=\\\"form-control max-wt-300 search-input\\\" placeholder=\\\"Search\\\">\\n                             <i class=\\\"fa fa-search\\\" aria-hidden=\\\"true\\\"></i>\\n                          </div>\\n                       </div>\\n                    </div>\\n                    <div class=\\\"col-sm-6\\\">\\n                       <div class=\\\"btn-right\\\">\\n                          <button class=\\\"btn btn-red btn-common\\\" (click)=\\\"addProduct()\\\">Add</button>\\n                       </div>\\n                    </div>\\n                 </div>\\n                 <div class=\\\"row\\\">\\n                    <div class=\\\"col-sm-6\\\">\\n                       <div class=\\\"form-group d-inline-block\\\">\\n                          <div class=\\\"show-entries mb0\\\">\\n                             <select class=\\\"form-control\\\" (ngModelChange)=\\\"onSelect($event)\\\" name=\\\"gender\\\" (change)=\\\"sort()\\\" [(ngModel)]=\\\"sortProduct.gender\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n                                <option value=\\\"\\\" >--Select--</option>\\n                                <option *ngFor=\\\"let gen of gender\\\" value={{gen.name}} >{{gen.name}}</option>\\n                             </select> \\n                          </div>\\n                        </div>\\n                        <div class=\\\"form-group d-inline-block\\\">\\n                          <div class=\\\"show-entries mb0\\\">\\n                             <select class=\\\"form-control\\\" name=\\\"bodyType\\\" (change)=\\\"sort()\\\" [(ngModel)]=\\\"sortProduct.bodyType\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n                                <option value=\\\"\\\" >--Select--</option>\\n                                <option *ngFor=\\\"let body of selectedBody\\\" value={{body.name}}>{{body.name}}</option>\\n                             </select>  \\n                          </div>\\n                        </div>\\n                    </div>\\n                 </div>\\n                <div class=\\\"box box-blue\\\">\\n            <div class=\\\"box-body\\\">\\n                <div class=\\\"custom-table table-responsive\\\">\\n              <table class=\\\"table  table-border\\\">\\n                  <thead>\\n                      <tr>\\n                        <th>SNo.</th>\\n                        <th>Gender</th>\\n                        <th>Body Type</th>\\n                        <th>Product Name</th>\\n                        <th>Brand Name</th>\\n                        <th>Action</th>\\n                      </tr>\\n                  </thead>\\n                  <tbody>\\n                      <tr *ngFor=\\\"let item of product | paginate: { itemsPerPage: 10, currentPage: p ,totalItems: total} ; let i = index \\\" [attr.data-index] =\\\"i\\\">\\n                        <td *ngIf=\\\"p == 1\\\">{{i + 1}}</td>\\n                        <td *ngIf=\\\"p > 1\\\">{{i + 1 + 10 * (p-1)}}</td>\\n                        <td>{{item.productGender}}</td>\\n                        <td>{{item.bodyType}}</td>\\n                        <td>{{item.productName}}</td>\\n                        <td>{{item.brandName}}</td>\\n                        <td>\\n                            <div class=\\\"action-btn\\\">\\n                                <a class=\\\"btn btn-sm btn-success\\\" href=\\\"view-product.html\\\"><i class=\\\"fa fa-eye\\\"></i> View</a>\\n                                <a class=\\\"btn btn-sm btn-primary\\\" href=\\\"edit-product.html\\\"><i class=\\\"fa fa-edit\\\"></i> Edit</a>\\n                                <a class=\\\"btn btn-sm btn-danger\\\" href=\\\"#delete\\\"  data-toggle=\\\"modal\\\"><i class=\\\"fa fa-trash\\\"></i> Delete</a>\\n                            </div>  \\n                        </td>\\n                      </tr>\\n                  </tbody>\\n              </table>\\n          </div>  \\n                \\n            </div>\\n         </div>\\n              </div>\\n          </fieldset>\\n      </div>\\n        \\n          <div class=\\\"custom-pagination\\\">\\n                <pagination-controls (pageChange)=\\\"changePage($event)\\\" (change)=\\\"search(p)\\\"></pagination-controls>\\n        </div>\\n          \\n      </div>\\n</div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/product-management/product-management.component.html\n// module id = ./src/app/product-management/product-management.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { DataService } from '../data.service';\n\n@Component({\n  selector: 'app-product-management',\n  templateUrl: './product-management.component.html',\n  styleUrls: ['./product-management.component.css']\n})\nexport class ProductManagementComponent implements OnInit {\n  p: number = 1;\n  searchProduct={data:\"\"};\n  sortProduct={gender:\"\",bodyType:\"\"}\n  product: any;\n  total: any;\n  gender = [\n\n\n    {id:1, name:\"Male\"},\n    {id:2, name:\"Female\"} \n  \n  ]\n  maleBodyType = [\n\n    {id:1, name:\"Slim Jim\"},\n    {id:2, name:\"Muscle Man\"},\n    {id:3, name:\"Big Guy\"},\n    {id:4, name:\"Bulky\"}\n  ]\n\n  femaleBodyType = [\n    {id:1, name:\"Rectangle\"},\n    {id:2, name:\"Peer\"},\n    {id:3, name:\"Triangle\"},\n    {id:4, name:\"Hourglass\"}\n  ]\n  selectedBody: any;\n  constructor(private router: Router, public service: DataService) { }\n\n  ngOnInit() {\n    this.displayProduct()\n  }\n  addProduct() {\nthis.router.navigate(['/add-product'])\n  }\n  displayProduct() {\n    let credential = {\n      \"page\":this.p,\n      \"Search\":this.searchProduct.data,\n      \"productGender\":this.sortProduct.gender,\n      \"bodyType\":this.sortProduct.bodyType\n      \n    }\n    for (let val in credential) \n    {\n        if (credential[val] == '') \n        {\n            delete credential[val]\n        }\n      }\n    this.service.postApi('/productList', credential).subscribe(response => {\n    \n      if (response['responseCode'] == 200) {\n              console.log('success', response['data'].docs)           \n              this.product=response['data'].docs\n              this.total=response['data'].total\n      } \n      else if(response['responseCode'] == 402) {\n        this.service.error(response['responseMessage'])\n        this.router.navigate(['/login'])\n      }\n      else if(response['responseCode'] == 403) {  \n      this.service.error(response['responseMessage'])\n      this.router.navigate(['/login'])\n      }\n      else {\n        console.log('Failure', response['responseMessage']) \n      }\n    }, error => {\n      console.log('something went wrong') \n      \n    })\n  }\n  sort() {\n    this.displayProduct()\n  }\n  onSelect(productId) {\n   this.sortProduct.bodyType = \"\"\n   if(productId == \"\") {\n      this.sortProduct.gender = \"\"\n      this.sortProduct.bodyType = \"\"\n      this.selectedBody = null\n    }\n    if(productId == \"Male\") {\n      this.selectedBody = this.maleBodyType\n    }\n    else if(productId == \"Female\") {\n      this.selectedBody = this.femaleBodyType\n    }\n    \n}\nchangePage(page) \n{\n\n    this.p = page\n   \n    this.displayProduct()  \n\n}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/product-management/product-management.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/side-menu/side-menu.component.css\n// module id = ./src/app/side-menu/side-menu.component.css\n// module chunks = main","module.exports = \"<div class=\\\"header\\\">\\n  <nav class=\\\"navbar navbar-default\\\">\\n    <!-- Brand and toggle get grouped for better mobile display -->\\n    <div class=\\\"navbar-header\\\">\\n      <button type=\\\"button\\\" class=\\\"navbar-toggle collapsed\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#profile-collapse\\\" aria-expanded=\\\"false\\\">\\n      <span class=\\\"sr-only\\\">Toggle navigation</span>\\n      <span class=\\\"icon-bar\\\"></span>\\n      <span class=\\\"icon-bar\\\"></span>\\n      <span class=\\\"icon-bar\\\"></span>\\n      </button>\\n    </div>\\n  </nav>\\t\\n</div>\\n<div class=\\\"left-section\\\">\\n  <div class=\\\"menubox\\\">\\n    <div class=\\\"mobmenu\\\">\\n      <span></span>\\n      <span></span>\\n      <span></span>\\n    </div>\\n  </div>\\n  <div class=\\\"left-header\\\">\\n    <div class=\\\"logo\\\"><a><img src=\\\"assets/img/logo.png\\\"></a></div>\\n  </div>\\n      <div class=\\\"user-panel\\\">\\n<!--              <figure class=\\\"view-inline\\\">\\n           <a href=\\\"my-account.html\\\">\\n            <img src=\\\"assets/img/profile.jpg\\\">\\n            </a>\\n         </figure>[ngClass]=\\\"{'active': }\\\" -->\\n          <span class=\\\"view-inline user_name\\\">Admin Panel</span>\\n      </div>\\n  <div class=\\\"left-menu\\\">\\n    <ul class=\\\"nav\\\">\\n      <li><a [ngClass]=\\\"{'active': isActive == 'dashboard'  }\\\" (click)=\\\"tabManag('dashboard')\\\"><i class=\\\"fa fa-tachometer\\\"></i>DASHBOARD</a></li>\\n      <li><a [ngClass]=\\\"{'active': isActive == 'user-management' || isActive == 'view-user' || isActive == 'edit-user' || isActive == 'add-user'  }\\\" (click)=\\\"tabManag('userManagement')\\\"><i class=\\\"fa fa-users\\\"></i>USER MANAGEMENT</a></li>\\n      <li><a [ngClass]=\\\"{'active': isActive == 'brand-management'}\\\" (click)=\\\"tabManag('brandManagement')\\\"><i class=\\\"fa fa-angellist\\\"></i>BRAND MANAGEMENT</a></li>\\n      <li><a [ngClass]=\\\"{'active': isActive == 'product-management'}\\\" (click)=\\\"tabManag('productManagement')\\\"><i class=\\\"fa fa-product-hunt\\\"></i>PRODUCT MANAGEMENT</a></li>\\n      <li><a [ngClass]=\\\"{'active': isActive == 'style-management' }\\\" (click)=\\\"tabManag('styleManagement')\\\"><i class=\\\"fa fa-lastfm\\\"></i>STYLE MANAGEMENT</a></li>\\n      <li><a [ngClass]=\\\"{'active': isActive == 'logout'}\\\" data-toggle=\\\"modal\\\" data-target=\\\"#logout_modal\\\" (click)=\\\"tabManag('logout')\\\"><i class=\\\"fa fa-sign-out\\\"></i>LOGOUT</a></li>\\n    </ul>\\n  </div>\\n</div>\\n\\n<!-- <div class=\\\"modal fade global-modal reset-modal\\\" id=\\\"logout_modal\\\">\\n  <div class=\\\"modal-dialog max-WT-500\\\">\\n  <div class=\\\"modal-content\\\">\\n             \\n    <div class=\\\"modal-body  text-center\\\">\\n    <div>\\n        <div class=\\\"col-md-12\\\">\\n            <h1 class=\\\"page_title\\\">Logout</h1>\\n         </div>\\n      <div class=\\\"col\\\">\\n          <div class=\\\"row mb15\\\">\\n              <label class=\\\"control-label col-md-12\\\">Are You Sure You Want To Log Out?</label>\\n              <div class=\\\"col-md-12\\\">\\n              </div>\\n           </div>\\n           <div class=\\\"row\\\">\\n                  <div class=\\\"col-6\\\">\\n                                <button (click)=\\\"logout()\\\" data-dismiss=\\\"modal\\\" class=\\\"btn btn-green btn-large btn-block\\\">YES</button>\\n                              </div>\\n                 <div class=\\\"col-6\\\">\\n                    <button data-dismiss=\\\"modal\\\" class=\\\"btn btn-large btn-gray btn-block\\\">NO</button>\\n                  </div>\\n               </div>      \\n              </div>\\n    </div>\\n    </div>\\n</div>\\n  </div>\\n</div> -->\\n\\n<div id=\\\"logout_modal\\\" class=\\\"modal fade\\\" data-easein=\\\"bounceIn\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"costumModalLabel\\\" aria-hidden=\\\"true\\\">\\n  <div class=\\\"modal-dialog\\\">\\n      <div class=\\\"modal-content common-detail-modal\\\">\\n          \\n          <div class=\\\"modal-body\\\">\\n              <label class=\\\"modal-inner-text\\\">\\n                Are You Sure You Want To Log Out?\\n              </label>\\n\\n              <div class=\\\"button-box mt20\\\">\\n                 <button class=\\\"btn btn-red mr10\\\" (click)=\\\"logout()\\\" data-dismiss=\\\"modal\\\">yes</button>\\n                 <button class=\\\"btn btn-danger\\\" data-dismiss=\\\"modal\\\">No</button>\\n              </div>\\n          </div>\\n          <div class=\\\"modal-footer\\\">\\n              \\n          </div>\\n      </div>\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/side-menu/side-menu.component.html\n// module id = ./src/app/side-menu/side-menu.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-side-menu',\n  templateUrl: './side-menu.component.html',\n  styleUrls: ['./side-menu.component.css']\n})\nexport class SideMenuComponent implements OnInit {\n  route: string\n  currentURL=''\n  isActive= \"\";\n  constructor(private router: Router) { \n   \n  }\n\n  ngOnInit() {\n   let url = window.location.href.split('/')\n   let page = url[url.length-1]\n    this.isActive= page;\n  }\n  tabManag(val){ \n    let url = window.location.href.split('/')\n    let page = url[url.length-1]\n    this.isActive= page;\n    \n    if(val == \"dashboard\" ) {\n      this.router.navigate(['/dashboard'])\n      //this.isActive= val;\n    }\n    else if(val == \"userManagement\") {\n      this.router.navigate(['/user-management'])\n      //this.isActive= val;\n    }\n    else if(val == \"brandManagement\") {\n      this.router.navigate(['/brand-management'])\n      //this.isActive= val;\n    }\n    else if(val == \"productManagement\") {\n      this.router.navigate(['/product-management'])\n      //this.isActive= val;\n    }\n    else if(val == \"styleManagement\") {\n      this.router.navigate(['/style-management'])\n     } \n     //else if(val == \"logout\"){\n    //   this.isActive= val\n    // }\n  }\n  logout() {\n    localStorage.setItem(\"token\",\"\")\n    history.go(-(history.length-1))\n    //this.router.navigate(['/login'])\n    \n    //history.pushState('',\"\",\"\");\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/side-menu/side-menu.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/style-management/style-management.component.css\n// module id = ./src/app/style-management/style-management.component.css\n// module chunks = main","module.exports = \"<div class=\\\"mainbox\\\">\\n<app-side-menu></app-side-menu>\\n<div class=\\\"right-section\\\">\\n  <div class=\\\"copyrights\\\">Copyright © 2018 App name All Rights Reserved.</div>\\n  <div class=\\\"right-inner\\\">\\n      \\n    <h1 class=\\\"heading\\\">STYLE MANAGEMENT</h1>\\n    <div class=\\\"filter-block\\\">\\n          <fieldset class=\\\"global-fieldset\\\">\\n              <legend>Style Board</legend>\\n              <div class=\\\"filter-content\\\">\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-sm-6\\\">\\n                       <div class=\\\"form-group\\\">\\n                          <div class=\\\"search-icon\\\">\\n                             <input type=\\\"text\\\" [(ngModel)]=\\\"searchStyle.data\\\"  (keyup)=\\\"search()\\\" class=\\\"form-control max-wt-300 search-input\\\" placeholder=\\\"Search\\\">\\n                             <i class=\\\"fa fa-search\\\" aria-hidden=\\\"true\\\"></i>\\n                          </div>\\n                       </div>\\n                    </div>\\n                    <div class=\\\"col-sm-6\\\">\\n                       <div class=\\\"btn-right\\\">\\n                          <a class=\\\"btn btn-red btn-common\\\" href=\\\"#add_style\\\" data-toggle=\\\"modal\\\">Add</a>\\n                       </div>\\n                    </div>\\n                 </div>\\n                 <div class=\\\"row\\\">\\n                    <div class=\\\"col-sm-6\\\">\\n                        <div class=\\\"form-group d-inline-block\\\">\\n                          <div class=\\\"show-entries mb0\\\">\\n                                <select (ngModelChange)=\\\"onSelectSearch($event)\\\" name=\\\"gender\\\" (change)=\\\"sort()\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"searchStyleTip.gender\\\" [ngModelOptions]=\\\"{standalone: true}\\\">  \\n                                        <option value=\\\"\\\" >--Select--</option> \\n                                         <option *ngFor=\\\"let gen of gender\\\" value={{gen.name}} >{{gen.name}}</option>\\n                                     </select>  \\n                          </div>\\n                        </div>\\n                        <div class=\\\"form-group d-inline-block\\\">\\n                          <div class=\\\"show-entries mb0\\\">\\n                                <select class=\\\"form-control\\\" (ngModelChange)=\\\"onSelectSearchBody($event)\\\" name=\\\"bodyType\\\" (change)=\\\"sort()\\\" [(ngModel)]=\\\"searchStyleTip.bodyType\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n                                        <option value=\\\"\\\" >--Select--</option>  \\n                                        <option *ngFor=\\\"let body of selectedBody\\\" value={{body.name}}>{{body.name}}</option>\\n                                   </select> \\n                          </div>\\n                        </div>\\n                        <div class=\\\"form-group d-inline-block\\\">\\n                          <div class=\\\"show-entries mb0\\\">\\n                                <select name=\\\"brand\\\" (change)=\\\"sort()\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"searchStyleTip.brand\\\" [ngModelOptions]=\\\"{standalone: true}\\\">  \\n                                        <option value=\\\"\\\" >--Select--</option> \\n                                         <option *ngFor=\\\"let item of searchStyleBrands\\\" value={{item}} >{{item}}</option>\\n                                     </select>  \\n                          </div>\\n                        </div>\\n                    </div>\\n                 </div>\\n                <div class=\\\"box box-blue\\\">\\n                  <div class=\\\"box-body\\\">\\n                    <div class=\\\"custom-table table-responsive\\\">\\n                    <table class=\\\"table table-striped table-border table-color\\\">\\n                      <thead>\\n                          <tr>\\n                            <th>SNo.</th>\\n                            <th>Gender</th>\\n                            <th>Body Type</th>\\n                            <th> Brands</th>\\n                          </tr>\\n                      </thead>\\n                      <tbody>\\n                          <tr *ngFor=\\\"let style of styleTips | paginate: { itemsPerPage: 10, currentPage: p ,totalItems: total} ; let i = index \\\" [attr.data-index] =\\\"i\\\">\\n                            <td *ngIf=\\\"p == 1\\\">{{i + 1}}</td>\\n                            <td *ngIf=\\\"p > 1\\\">{{i + 1 + 10 * (p-1)}}</td>\\n                            <td>{{style.styleGender}}</td>\\n                            <td>{{style.bodyType}}</td>\\n                            <td>{{style.brandName}}</td>\\n                          </tr>\\n                          <!-- <tr *ngFor=\\\"let userList of userData | paginate: { itemsPerPage: 10, currentPage: p ,totalItems: total} ; let i = index \\\" [attr.data-index] =\\\"i\\\">\\n                            <td *ngIf=\\\"p == 1\\\">{{i + 1}}</td>\\n                            <td *ngIf=\\\"p > 1\\\">{{i + 1 + 10 * (p-1)}}</td>\\n                            <td>{{userList.name}}</td>\\n                            <td>{{userList.email}}</td>\\n                            <td>{{userList.age}}</td>\\n                            <td>{{userList.gender}}</td>\\n                            <td>{{userList.bodyType}}</td>\\n                            <td>{{userList.height}}</td>\\n                            <td>{{userList.weight}}</td>\\n                            <td>{{userList.isSubscription}}</td>\\n                          </tr> -->\\n                     </tbody>\\n                    </table>\\n                  </div>  \\n                </div>\\n              </div>\\n            </div>\\n          </fieldset>\\n      </div>\\n        \\n      <div class=\\\"custom-pagination\\\">\\n        <pagination-controls (pageChange)=\\\"changePage($event)\\\"></pagination-controls>\\n</div>\\n          \\n      </div>\\n</div>\\n</div>\\n\\n\\n<div id=\\\"add_style\\\" class=\\\"modal fade\\\" data-easein=\\\"bounceIn\\\"  tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"costumModalLabel\\\" aria-hidden=\\\"true\\\">\\n  <div class=\\\"modal-dialog max-wt-800\\\">\\n      <div class=\\\"modal-content\\\">\\n          <div class=\\\"modal-header border0\\\">\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\">\\n                  ×\\n              </button>\\n          </div>\\n          <div class=\\\"modal-body pt0\\\">\\n              <fieldset class=\\\"global-fieldset\\\">\\n                 <legend>Add Style Tip</legend>\\n                 <div class=\\\"max-wt-400 mrgn-0-auto mt20 mb30\\\">\\n                    <div class=\\\"form-group mb30\\\">\\n                       <label>Gender:</label>\\n                       <select (ngModelChange)=\\\"onSelectAdd($event)\\\" name=\\\"gender\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"addStyleTip.gender\\\" [ngModelOptions]=\\\"{standalone: true}\\\">  \\n                        <option value=\\\"\\\" >--Select--</option> \\n                         <option *ngFor=\\\"let gen of gender\\\" value={{gen.name}} >{{gen.name}}</option>\\n                     </select> \\n                    </div>\\n                    <div class=\\\"form-group mb30\\\">\\n                       <label>Body Type:</label>\\n                       <select class=\\\"form-control\\\" name=\\\"bodyType\\\" [(ngModel)]=\\\"addStyleTip.bodyType\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n                        <option value=\\\"\\\" >--Select--</option>  \\n                        <option *ngFor=\\\"let body of selectedBodyAdd\\\" value={{body.name}}>{{body.name}}</option>\\n                   </select>\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                       <label>Brand Name:</label>\\n                       <select name=\\\"brand\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"addStyleTip.brand\\\" [ngModelOptions]=\\\"{standalone: true}\\\">  \\n                        <option value=\\\"\\\" >--Select--</option> \\n                         <option *ngFor=\\\"let item of styleBrands\\\" value={{item}} >{{item}}</option>\\n                     </select> \\n                    </div>\\n                    <div class=\\\"button-box mt40\\\">\\n                       <button class=\\\"btn btn-red mr10 btn-common\\\" data-dismiss=\\\"modal\\\" (click)=\\\"addStyle()\\\">Add</button>\\n                    </div>\\n                 </div>\\n              </fieldset>\\n          </div>\\n      </div>\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/style-management/style-management.component.html\n// module id = ./src/app/style-management/style-management.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { DataService } from '../data.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-style-management',\n  templateUrl: './style-management.component.html',\n  styleUrls: ['./style-management.component.css']\n})\nexport class StyleManagementComponent implements OnInit {\n  styleTips=[]\n  searchStyle={data:\"\"};\n  searchStyleTip={gender:\"\",bodyType:\"\",brand:\"\"}\n  addStyleTip={\"gender\": \"\",\"bodyType\":\"\",\"brand\":\"\"}\n  p: number = 1;\n  selectedBody: any\n  selectedBodyAdd: any;\n  gender = [\n\n\n    {id:1, name:\"Male\"},\n    {id:2, name:\"Female\"} \n  \n  ]\n  maleBodyType = [\n\n    {id:1, name:\"Slim Jim\"},\n    {id:2, name:\"Muscle Man\"},\n    {id:3, name:\"Big Guy\"},\n    {id:4, name:\"Bulky\"}\n  ]\n\n  femaleBodyType = [\n    {id:1, name:\"Rectangle\"},\n    {id:2, name:\"Peer\"},\n    {id:3, name:\"Triangle\"},\n    {id:4, name:\"Hourglass\"}\n  ]\n  selectedProduct: any;\n  \n  styleBrands: any;\n  searchStyleBrands: any;\n  selectedSearchProduct: { id: number; name: string; };\n  total: any;\n  \n  constructor(public service: DataService, private router: Router) { }\n\n  ngOnInit() {\n   this.displayStyleTips()\n  }\n  \n  displayStyleTips() {\n    let credential = {\n      \"page\":this.p,\n      \"search\":this.searchStyle.data,\n      \"styleGender\":this.searchStyleTip.gender,\n      \"bodyType\":this.searchStyleTip.bodyType,\n      \"brandName\":this.searchStyleTip.brand\n      \n    }\n    for (let val in credential) \n    {\n        if (credential[val] == '') \n        {\n            delete credential[val]\n        }\n    }\n    this.service.postApi('/styleTipList', credential).subscribe(response => {\n     \n      if (response['responseCode'] == 200) {\n              console.log('success', response['data'].docs) \n              this.styleTips=response['data'].docs\n              this.total=response['data'].total\n      } \n      else if(response['responseCode'] == 402) {\n        this.service.error(response['responseMessage'])\n        this.router.navigate(['/login'])\n}\nelse if(response['responseCode'] == 403) {  \n this.service.error(response['responseMessage'])\n this.router.navigate(['/login'])\n}\n      else {\n        this.service.error('Invalid Email')\n        console.log('Failure', response['responseMessage']) \n      }\n    }, error => {\n      console.log('something went wrong') \n      \n    })\n  }\n  changePage(page) \n  {\n      this.p = page\n     \n      this.displayStyleTips()  \n  \n  }\n  search() {\n    this.displayStyleTips()\n   }\n   sort() {\n     this.displayStyleTips()\n   }\n   onSelectSearch(productId) {\n    this.searchStyleTip.bodyType = \"\"\n    this.searchStyleTip.brand = \"\"\n    if(productId == \"\") {\n       this.searchStyleTip.gender = \"\"\n       this.searchStyleTip.bodyType = \"\"\n       this.searchStyleTip.brand = \"\"\n       this.selectedBody = null\n       this.searchStyleBrands = null\n     }\n     if(productId == \"Male\") {\n       this.selectedBody = this.maleBodyType\n     }\n     else if(productId == \"Female\") {\n       this.selectedBody = this.femaleBodyType\n     }\n     let credential = {\n       \"styleGender\":productId\n     }\n     for (let val in credential) \n     {\n         if (credential[val] == '') \n         {\n             delete credential[val]\n         }\n     }\n     this.service.postApi('/styleBrandList', credential).subscribe(response => {\n       if (response['responseCode'] == 200) {\n               console.log('success', response['data'])\n               this.searchStyleBrands=response['data']\n       } \n       else if(response['responseCode'] == 402) {\n        this.service.error(response['responseMessage'])\n        this.router.navigate(['/login'])\n}\nelse if(response['responseCode'] == 403) {  \n this.service.error(response['responseMessage'])\n this.router.navigate(['/login'])\n}\n       else {\n         console.log('Failure', response['responseMessage']) \n       }\n     }, error => {\n       console.log('something went wrong') \n       \n     })\n }\n\n\n onSelectSearchBody(productId) {\n  this.searchStyleBrands = null\n  let credential = {\n    \n    \"bodyType\":productId\n  }\n  for (let val in credential) \n  {\n      if (credential[val] == '') \n      {\n          delete credential[val]\n      }\n  }\n  \n  this.service.postApi('/styleBrandList', credential).subscribe(response => {\n    if (response['responseCode'] == 200) {\n            \n            console.log('success', response['data'])\n            this.searchStyleBrands=response['data']\n            \n    } \n    else if(response['responseCode'] == 402) {\n      this.service.error(response['responseMessage'])\n      this.router.navigate(['/login'])\n}\nelse if(response['responseCode'] == 403) {  \nthis.service.error(response['responseMessage'])\nthis.router.navigate(['/login'])\n}\n    else {\n      console.log('Failure', response['responseMessage']) \n    }\n  }, error => {\n    console.log('something went wrong') \n    \n  })\n }\n\n\n   onSelectAdd(productId) {\n     this.addStyleTip.bodyType = \"\"\n     this.addStyleTip.brand = \"\"\n   if(productId == \"\") {\n      this.addStyleTip.gender = \"\"\n      this.addStyleTip.bodyType = \"\"\n      this.addStyleTip.brand = \"\"\n      this.selectedBodyAdd = null\n      this.styleBrands = null\n    }\n    if(productId == \"Male\") {\n      this.selectedBodyAdd = this.maleBodyType\n    }\n    else if(productId == \"Female\") {\n      this.selectedBodyAdd = this.femaleBodyType\n    }\n   \n    \n    let credential = {\n      \"productGender\":productId,\n      \"bodyType\":this.addStyleTip.bodyType\n    }\n    for (let val in credential) \n    {\n        if (credential[val] == '') \n        {\n            delete credential[val]\n        }\n    }\n    this.service.postApi('/bodyTypeBrandList', credential).subscribe(response => {\n      \n      if (response['responseCode'] == 200) {\n              console.log('success', response['data']) \n              this.styleBrands=response['data']\n      }\n      else if(response['responseCode'] == 402) {\n        this.service.error(response['responseMessage'])\n        this.router.navigate(['/login'])\n}\nelse if(response['responseCode'] == 403) {  \n this.service.error(response['responseMessage'])\n this.router.navigate(['/login'])\n}\n      else {\n        console.log('Failure', response['responseMessage']) \n      }\n    }, error => {\n      console.log('something went wrong') \n      \n    })\n}\n  addStyle() {\n    this.p = 1\n    let credential = {\n      \"createdBy\":localStorage.getItem(\"adminId\"),\n      \"styleGender\":this.addStyleTip.gender,\n      \"brandName\":this.addStyleTip.brand,\n      \"bodyType\":this.addStyleTip.bodyType,\n     }\n          this.service.postApi('/addNewStyleTip', credential).subscribe(response => {\n           console.log(JSON.stringify(credential))\n            if (response['responseCode'] == 200) {\n                    this.service.success(response['responseMessage'])\n                    console.log('success', response['responseMessage'])           \n                    this.displayStyleTips()\n            } \n            else if(response['responseCode'] == 402) {\n              this.service.error(response['responseMessage'])\n              this.router.navigate(['/login'])\n     }\n     else if(response['responseCode'] == 403) {  \n       this.service.error(response['responseMessage'])\n       this.router.navigate(['/login'])\n     }\n            else {\n              this.service.error(response['responseMessage'])\n              console.log('Failure', response['responseMessage']) \n            }\n          }, error => {\n            console.log('something went wrong') \n            \n          })\n          this.addStyleTip.gender = \"\"\n          this.addStyleTip.brand = \"\"\n          this.addStyleTip.bodyType = \"\"\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/style-management/style-management.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/user-management/user-management.component.css\n// module id = ./src/app/user-management/user-management.component.css\n// module chunks = main","module.exports = \"<div class=\\\"mainbox\\\">\\n<app-side-menu></app-side-menu>\\n<div class=\\\"right-section\\\">\\n  <div class=\\\"copyrights\\\">Copyright © 2018 App name All Rights Reserved.</div>\\n  <div class=\\\"right-inner\\\">\\n      \\n    <h1 class=\\\"heading\\\">USER MANAGEMENT</h1>\\n    <div class=\\\"filter-block\\\">\\n          <fieldset class=\\\"global-fieldset\\\">\\n              <legend>User Board</legend>\\n              <div class=\\\"filter-content\\\">\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-sm-6\\\">\\n                       <div class=\\\"form-group\\\">\\n                          <div class=\\\"search-icon\\\">\\n                             <input type=\\\"text\\\" [(ngModel)]=\\\"searchData.data\\\"  (keyup)=\\\"search()\\\" class=\\\"form-control max-wt-300 search-input\\\" placeholder=\\\"Search\\\">\\n                             <i class=\\\"fa fa-search\\\" aria-hidden=\\\"true\\\"></i>\\n                          </div>\\n                       </div>\\n                    </div>\\n                    <!-- <div class=\\\"col-sm-6\\\">\\n                       <div class=\\\"btn-right\\\">\\n                          <button class=\\\"btn btn-red btn-common\\\" (click)=\\\"addUser()\\\">Add</button>\\n                       </div>\\n                    </div> -->\\n                 </div>\\n                 <div class=\\\"row\\\">\\n                    <div class=\\\"col-sm-6\\\">\\n                       <div class=\\\"form-group d-inline-block\\\">\\n                          <div class=\\\"show-entries mb0\\\">\\n                                <select (ngModelChange)=\\\"onSelect($event)\\\" (change)=\\\"sort()\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"searchDataBody.gender\\\" [ngModelOptions]=\\\"{standalone: true}\\\">  \\n                                        <option value=\\\"\\\" >--Select--</option> \\n                                         <option *ngFor=\\\"let gen of gender\\\" value={{gen.name}} >{{gen.name}}</option>\\n                                     </select>  \\n                          </div>\\n                        </div>\\n                        <div class=\\\"form-group d-inline-block\\\">\\n                          <div class=\\\"show-entries mb0\\\">\\n                                <select class=\\\"form-control\\\" name=\\\"bodyType\\\" (change)=\\\"sort()\\\" [(ngModel)]=\\\"searchDataBody.bodyType\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n                                        <option value=\\\"\\\" >--Select--</option>  \\n                                        <option *ngFor=\\\"let body of selectedBody\\\" value={{body.name}}>{{body.name}}</option>\\n                                   </select> \\n                          </div>\\n                        </div>\\n                    </div>\\n                 </div>\\n                <div class=\\\"box box-blue\\\">\\n            <div class=\\\"box-body\\\">\\n                <div class=\\\"custom-table table-responsive\\\">\\n              <table class=\\\"table table-striped table-border\\\">\\n                  <thead>\\n                      <tr>\\n                        <th>SNo.</th>\\n                        <th>Name</th>\\n                        <th>Email</th>\\n                        <th>Age</th>\\n                        <th>Gender</th>\\n                        <th>Body Type</th>\\n                        <th>Height</th>\\n                        <th>Weight</th>\\n                        <th>Type</th>\\n                        <th>Action</th>\\n                      </tr>\\n                  </thead>\\n                  <tbody>\\n                      <tr *ngFor=\\\"let userList of userData | paginate: { itemsPerPage: 10, currentPage: p ,totalItems: total} ; let i = index \\\" [attr.data-index] =\\\"i\\\">\\n                        <td *ngIf=\\\"p == 1\\\">{{i + 1}}</td>\\n                        <td *ngIf=\\\"p > 1\\\">{{i + 1 + 10 * (p-1)}}</td>\\n                        <td>{{userList.name}}</td>\\n                        <td>{{userList.email}}</td>\\n                        <td>{{userList.age}}</td>\\n                        <td>{{userList.gender}}</td>\\n                        <td>{{userList.bodyType}}</td>\\n                        <td>{{userList.height}}</td>\\n                        <td>{{userList.weight}}</td>\\n                        <td>{{userList.isSubscription}}</td>\\n                        <td>\\n                            <div class=\\\"action-btn\\\">\\n                                <button class=\\\"btn btn-sm btn-success\\\" (click)=\\\"view(userList._id)\\\"><i class=\\\"fa fa-eye\\\"></i> View</button>\\n                                <!-- <button class=\\\"btn btn-sm btn-primary\\\" (click)=\\\"edit(userList._id)\\\"><i class=\\\"fa fa-edit\\\"></i> Edit</button> -->\\n                                <button class=\\\"btn btn-sm btn-danger\\\" (click)=\\\"delete(userList._id)\\\" ><i class=\\\"fa fa-trash\\\"></i> Delete</button>\\n                            </div>  \\n                        </td>\\n                      </tr>\\n                     \\n                  </tbody>\\n              </table>\\n             \\n          </div>  \\n                \\n            </div>\\n         </div>\\n              </div>\\n          </fieldset>\\n      </div>\\n      <!-- <pagination-controls (pageChange)=\\\"p = $event\\\"></pagination-controls> -->\\n          <div class=\\\"custom-pagination\\\">\\n                  <pagination-controls (pageChange)=\\\"changePage($event)\\\" (change)=\\\"search(p)\\\"></pagination-controls>\\n          </div>\\n          \\n      </div>\\n</div>\\n</div>\\n\\n<div id=\\\"delete\\\" class=\\\"modal fade\\\" data-easein=\\\"bounceIn\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"costumModalLabel\\\" aria-hidden=\\\"true\\\">\\n  <div class=\\\"modal-dialog\\\">\\n      <div class=\\\"modal-content common-detail-modal\\\">\\n          <div class=\\\"modal-header\\\">\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\">\\n                  ×\\n              </button>\\n          </div>\\n          <div class=\\\"modal-body\\\">\\n              <p class=\\\"modal-inner-text\\\">\\n                 Are you sure you want to delete this product?\\n              </p>\\n\\n              <div class=\\\"button-box mt20\\\">\\n                 <button class=\\\"btn btn-red mr10\\\" (click)=\\\"yes()\\\">yes</button>\\n                 <button class=\\\"btn btn-danger\\\" (click)=\\\"cancelDelete()\\\">No</button>\\n              </div>\\n          </div>\\n          <div class=\\\"modal-footer\\\">\\n              \\n          </div>\\n      </div>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/user-management/user-management.component.html\n// module id = ./src/app/user-management/user-management.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { DataService } from '../data.service';\ndeclare var $ :any;\n@Component({\n  selector: 'app-user-management',\n  templateUrl: './user-management.component.html',\n  styleUrls: ['./user-management.component.css']\n})\nexport class UserManagementComponent implements OnInit {\n total:any\n  p: number = 1;\n  searchData={data:\"\"};\n  searchDataBody={gender:\"\",bodyType:\"\"}\n  userData=[]\n  _id:any\n  selectedProduct:any\n  selectedBody:any\n  gender = [\n\n\n    {id:1, name:\"Male\"},\n    {id:2, name:\"Female\"}    \n  \n  ]\n  maleBodyType = [\n\n    {id:1, name:\"Slim Jim\"},\n    {id:2, name:\"Muscle Man\"},\n    {id:3, name:\"Big Guy\"},\n    {id:4, name:\"Bulky\"}\n  ]\n\n  femaleBodyType = [\n    {id:1, name:\"Rectangle\"},\n    {id:2, name:\"Peer\"},\n    {id:3, name:\"Triangle\"},\n    {id:4, name:\"Hourglass\"}\n  ]\n  constructor(private router: Router, public service : DataService) { }\n\n  ngOnInit() {\n    if(this.searchDataBody.gender == \" \") {\n      this.searchDataBody.bodyType = \"\"\n    }\n    this.displayUser()\n    \n  }\n  onSelect(productId) {\n    if(productId == \"\") {\n      this.searchDataBody.gender = \"\"\n      this.searchDataBody.bodyType = \"\"\n      this.selectedBody = null\n    }\n    this.searchDataBody.bodyType = \"\"\n    this.selectedProduct = null;\n    for (var i = 0; i < this.gender.length; i++)\n    {\n      if (this.gender[i].name == productId) {\n        this.selectedProduct = this.gender[i];\n       \n      }\n    }\n    if(this.selectedProduct.name == \"Male\") {\n      this.selectedBody = this.maleBodyType\n    }\n    else {\n      this.selectedBody = this.femaleBodyType\n    \n    }\n \n}\n\n  // addUser() {\n  //   this.p = 1\n  //    this.router.navigate(['/add-user'])\n  // }\n  delete(userId){\n    this._id = userId\n    $('#delete').modal('show')\n\n  }\n  yes() {\n    let credential = {\n      \"userId\":this._id\n    }\n    this.service.postApi('/deleteUser', credential).subscribe(response => {\n      if (response['responseCode'] == 200) {\n              this.service.success(response['responseMessage'])\n              console.log('success', response['responseMessage'])\n              $('#delete').modal('hide') \n              this.displayUser()\n      } else {\n        console.log('Failure', response['responseMessage']) \n      }\n    }, error => {\n      console.log('something went wrong') \n      \n    })\n  }\n  cancelDelete() {\n    $('#delete').modal('hide')\n  }\n  search() {\n   this.displayUser()\n  }\n  sort() {\n   this.displayUser()\n  }\n  view(id) {\n  localStorage.setItem('userId',id)\n  this.router.navigate(['/view-user'])\n  }\n  // edit(id) {\n  //   localStorage.setItem('userId',id)\n  // this.router.navigate(['/edit-user'])\n  // }\n  changePage(page) \n  {\n  \n      this.p = page\n     \n      this.displayUser()  \n  \n  }\ndisplayUser() {\n\n  let credential = {\n    \"page\":this.p,\n    \"search\":this.searchData.data,\n    \"gender\":this.searchDataBody.gender,\n    \"bodyType\": this.searchDataBody.bodyType\n\n  }\n  \n  for (let val in credential) \n    {\n        if (credential[val] == '') \n        {\n            delete credential[val]\n        }\n    }\n  this.service.postApi('/getAllUsers', credential).subscribe(response => {\n    \n    if (response['responseCode'] == 200) {\n            console.log('success', response['data'].docs)           \n            this.userData=response['data'].docs\n            this.total=response['data'].total\n            for(var i=0;i<this.userData.length;i++){\n              if(this.userData[i].isSubscription == false){\n                this.userData[i].isSubscription = 'UnPaid'\n              }\n              else{\n                this.userData[i].isSubscription = 'Paid'\n              }\n            }\n    } \n    else if(response['responseCode'] == 402) {\n      this.service.error(response['responseMessage'])\n      this.router.navigate(['/login'])\n}\nelse if(response['responseCode'] == 403) {  \nthis.service.error(response['responseMessage'])\nthis.router.navigate(['/login'])\n}\n    else {\n      console.log('Failure', response['responseMessage']) \n    }\n  }, error => {\n    console.log('something went wrong') \n    \n  })\n}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/user-management/user-management.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/view-user/view-user.component.css\n// module id = ./src/app/view-user/view-user.component.css\n// module chunks = main","module.exports = \"<div class=\\\"mainbox\\\">\\n  <app-side-menu></app-side-menu>\\n<div class=\\\"right-section\\\">\\n  <div class=\\\"copyrights\\\">Copyright © 2018 App name All Rights Reserved.</div>\\n  <div class=\\\"right-inner\\\">\\n            <div class=\\\"filter-block\\\">\\n              <fieldset class=\\\"global-fieldset\\\">\\n                 <legend>Edit User</legend>\\n                  <div class=\\\"filter-content\\\">\\n                      \\n                       <div class=\\\"common-detail-box\\\">\\n                          <div class=\\\"form-group row\\\">\\n                             <label class=\\\"col-sm-6  label-right\\\">Name</label>\\n                             <div class=\\\"col-sm-6\\\">\\n                                {{viewUserDetail.name}}\\n                             </div>\\n                          </div>\\n                          <div class=\\\"form-group row\\\">\\n                             <label class=\\\"col-sm-6 label-right\\\">Email</label>\\n                             <div class=\\\"col-sm-6\\\">\\n                                {{viewUserDetail.email}}\\n                             </div>\\n                          </div>\\n                          <div class=\\\"form-group row\\\">\\n                             <label class=\\\"col-sm-6 label-right\\\">Age</label>\\n                             <div class=\\\"col-sm-6\\\">\\n                                {{viewUserDetail.age}}\\n                             </div>\\n                          </div>\\n                          <div class=\\\"form-group row\\\">\\n                             <label class=\\\"col-sm-6 label-right\\\">Gender</label>\\n                             <div class=\\\"col-sm-6\\\">\\n                                {{viewUserDetail.gender}}\\n\\n                             </div>\\n                          </div>\\n                          <div class=\\\"form-group row\\\">\\n                             <label class=\\\"col-sm-6 label-right\\\">Body Type</label>\\n                             <div class=\\\"col-sm-6\\\">\\n                                {{viewUserDetail.bodyType}}\\n                             </div>\\n                          </div>\\n                          <div class=\\\"form-group row\\\">\\n                             <label class=\\\"col-sm-6 label-right\\\">Height</label>\\n                             <div class=\\\"col-sm-6\\\">\\n                                {{viewUserDetail.height}}\\n                             </div>\\n                          </div>\\n                          <div class=\\\"form-group row\\\">\\n                             <label class=\\\"col-sm-6 label-right\\\">Weight</label>\\n                             <div class=\\\"col-sm-6\\\">\\n                                {{viewUserDetail.weight}}\\n                             </div>\\n                          </div>\\n                          <div class=\\\"table-button text-center mt30\\\">\\n                             <!-- <button (click)=\\\"editUser()\\\" class=\\\"btn btn-red\\\">Edit </button> -->\\n                             <button (click)=\\\"cancel()\\\" class=\\\"btn btn-danger\\\">Cancel</button>\\n                          </div>\\n                       </div>\\n\\n                  </div>\\n              </fieldset>\\n            </div>        \\n        </div>  \\n      </div>\\n</div>\\n\\n\\n\\n\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/view-user/view-user.component.html\n// module id = ./src/app/view-user/view-user.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { DataService } from '../data.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-view-user',\n  templateUrl: './view-user.component.html',\n  styleUrls: ['./view-user.component.css']\n})\nexport class ViewUserComponent implements OnInit {\n  viewUserDetail:any\n  constructor(public service : DataService, private router: Router) { }\n\n  ngOnInit() {\n    let credential = {\n      \"userId\":localStorage.getItem(\"userId\")\n }\n    this.service.postApi('/userDetail', credential).subscribe(response => {\n      if (response['responseCode'] == 200) {\n              console.log('success', response['data'])           \n              this.viewUserDetail=response['data']\n      } \n      else if(response['responseCode'] == 402) {\n        this.service.error(response['responseMessage'])\n        this.router.navigate(['/login'])\n}\nelse if(response['responseCode'] == 403) {  \n this.service.error(response['responseMessage'])\n this.router.navigate(['/login'])\n}\n      else {\n        console.log('Failure', response['responseMessage']) \n      }\n    }, error => {\n      console.log('something went wrong') \n      \n    })\n  }\n  editUser() {\n    this.router.navigate(['/edit-user'])\n  }\n  cancel() {\n    this.router.navigate(['/user-management'])\n\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/view-user/view-user.component.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts"],"sourceRoot":"webpack:///"}